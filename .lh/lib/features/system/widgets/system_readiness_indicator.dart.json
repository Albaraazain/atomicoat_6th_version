{
    "sourceFile": "lib/features/system/widgets/system_readiness_indicator.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734376761209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734376761209,
            "name": "Commit-0",
            "content": "\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport '../../../blocs/recipe/bloc/recipe_bloc.dart';\r\nimport '../../../blocs/recipe/bloc/recipe_state.dart';\r\nimport '../../../blocs/system_state/bloc/system_state_bloc.dart';\r\nimport '../../../blocs/system_state/bloc/system_state_state.dart';\r\n\r\nclass SystemReadinessIndicator extends StatefulWidget {\r\n  @override\r\n  _SystemReadinessIndicatorState createState() => _SystemReadinessIndicatorState();\r\n}\r\n\r\nclass _SystemReadinessIndicatorState extends State<SystemReadinessIndicator> {\r\n  bool _isExpanded = false;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return BlocBuilder<SystemStateBloc, SystemStateState>(\r\n      builder: (context, systemState) {\r\n        return BlocBuilder<RecipeBloc, RecipeState>(\r\n          builder: (context, recipeState) {\r\n            // First check if system is running\r\n            if (systemState.isSystemRunning) {\r\n              return _buildRunningIndicator(recipeState.activeRecipe?.name);\r\n            }\r\n\r\n            // If not running, show regular readiness status\r\n            final issues = systemState.systemIssues;\r\n            final isReady = issues.isEmpty;\r\n\r\n            return AnimatedPositioned(\r\n              duration: Duration(milliseconds: 300),\r\n              curve: Curves.easeInOut,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              child: GestureDetector(\r\n                onVerticalDragUpdate: (details) {\r\n                  if (details.primaryDelta! < -20) {\r\n                    setState(() => _isExpanded = true);\r\n                  } else if (details.primaryDelta! > 20) {\r\n                    setState(() => _isExpanded = false);\r\n                  }\r\n                },\r\n                child: Column(\r\n                  mainAxisSize: MainAxisSize.min,\r\n                  children: [\r\n                    _buildStatusBar(isReady),\r\n                    if (_isExpanded && !isReady)\r\n                      _buildIssuesList(issues),\r\n                  ],\r\n                ),\r\n              ),\r\n            );\r\n          },\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  Widget _buildRunningIndicator(String? recipeName) {\r\n    return AnimatedPositioned(\r\n      duration: Duration(milliseconds: 300),\r\n      curve: Curves.easeInOut,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      child: Container(\r\n        color: Colors.green.withOpacity(0.9),\r\n        child: SafeArea(\r\n          top: false,\r\n          child: Padding(\r\n            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n            child: Row(\r\n              children: [\r\n                Icon(\r\n                  Icons.play_circle,\r\n                  color: Colors.white,\r\n                  size: 20,\r\n                ),\r\n                SizedBox(width: 8),\r\n                Text(\r\n                  'System Running${recipeName != null ? ': $recipeName' : ''}',\r\n                  style: TextStyle(\r\n                    color: Colors.white,\r\n                    fontWeight: FontWeight.bold,\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildStatusBar(bool isReady) {\r\n    return Container(\r\n      color: isReady ? Colors.green.withOpacity(0.9) : Colors.red.withOpacity(0.9),\r\n      child: SafeArea(\r\n        top: false,\r\n        child: InkWell(\r\n          onTap: () => setState(() => _isExpanded = !_isExpanded),\r\n          child: Padding(\r\n            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n            child: Row(\r\n              children: [\r\n                Icon(\r\n                  isReady ? Icons.check_circle : Icons.warning,\r\n                  color: Colors.white,\r\n                  size: 20,\r\n                ),\r\n                SizedBox(width: 8),\r\n                Text(\r\n                  isReady ? 'System Ready' : 'System Not Ready',\r\n                  style: TextStyle(\r\n                    color: Colors.white,\r\n                    fontWeight: FontWeight.bold,\r\n                  ),\r\n                ),\r\n                Spacer(),\r\n                Icon(\r\n                  _isExpanded ? Icons.expand_more : Icons.expand_less,\r\n                  color: Colors.white,\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildIssuesList(List<String> issues) {\r\n    return Container(\r\n      color: Colors.black87,\r\n      constraints: BoxConstraints(\r\n        maxHeight: MediaQuery.of(context).size.height * 0.4\r\n      ),\r\n      child: SingleChildScrollView(\r\n        child: SafeArea(\r\n          top: false,\r\n          child: Padding(\r\n            padding: EdgeInsets.all(16),\r\n            child: Column(\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: [\r\n                Text(\r\n                  'Issues:',\r\n                  style: TextStyle(\r\n                    color: Colors.white,\r\n                    fontWeight: FontWeight.bold,\r\n                  ),\r\n                ),\r\n                SizedBox(height: 8),\r\n                ...issues.map((issue) => Padding(\r\n                  padding: EdgeInsets.only(bottom: 8),\r\n                  child: Row(\r\n                    crossAxisAlignment: CrossAxisAlignment.start,\r\n                    children: [\r\n                      Icon(\r\n                        Icons.error_outline,\r\n                        color: Colors.red,\r\n                        size: 16,\r\n                      ),\r\n                      SizedBox(width: 8),\r\n                      Expanded(\r\n                        child: Text(\r\n                          issue,\r\n                          style: TextStyle(\r\n                            color: Colors.white,\r\n                            fontSize: 12,\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                )),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}"
        }
    ]
}