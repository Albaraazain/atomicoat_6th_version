{
    "sourceFile": "lib/features/system/screens/main_dashboard.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1734376761208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734454981866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,8 @@\n import 'package:provider/provider.dart';\r\n import 'package:flutter_animate/flutter_animate.dart';\r\n import 'package:flutter_speed_dial/flutter_speed_dial.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n-import '../../auth/providers/auth_provider.dart';\r\n-import '../../../blocs/system_state/bloc/system_state_bloc.dart';\r\n-import '../../../blocs/system_state/bloc/system_state_event.dart';\r\n-import '../../../blocs/system_state/bloc/system_state_state.dart';\r\n import '../../components/widgets/component_control_overlay.dart';\r\n import '../../monitoring/widgets/data_visualization.dart';\r\n import '../../monitoring/widgets/graph_overlay.dart';\r\n import '../../monitoring/widgets/parameter_display.dart';\r\n"
                },
                {
                    "date": 1734455000835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n \r\n \r\n+import 'package:experiment_planner/features/system/bloc/system_state_bloc.dart';\r\n+import 'package:experiment_planner/features/system/bloc/system_state_state.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n import 'package:flutter_animate/flutter_animate.dart';\r\n import 'package:flutter_speed_dial/flutter_speed_dial.dart';\r\n"
                },
                {
                    "date": 1734455006104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n \r\n \r\n import 'package:experiment_planner/features/system/bloc/system_state_bloc.dart';\r\n+import 'package:experiment_planner/features/system/bloc/system_state_event.dart';\r\n import 'package:experiment_planner/features/system/bloc/system_state_state.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n import 'package:flutter_animate/flutter_animate.dart';\r\n"
                },
                {
                    "date": 1734458107797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,8 @@\n-\r\n-\r\n import 'package:experiment_planner/features/system/bloc/system_state_bloc.dart';\r\n import 'package:experiment_planner/features/system/bloc/system_state_event.dart';\r\n import 'package:experiment_planner/features/system/bloc/system_state_state.dart';\r\n import 'package:flutter/material.dart';\r\n-import 'package:provider/provider.dart';\r\n import 'package:flutter_animate/flutter_animate.dart';\r\n import 'package:flutter_speed_dial/flutter_speed_dial.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n import '../../components/widgets/component_control_overlay.dart';\r\n@@ -15,8 +12,11 @@\n import '../../recipes/widgets/recipe_control.dart';\r\n import '../../alarms/widgets/alarm_display.dart';\r\n import '../widgets/system_diagram_view.dart';\r\n import '../../monitoring/widgets/troubleshooting_overlay.dart';\r\n+import '../../auth/bloc/auth_bloc.dart';\r\n+import '../../auth/bloc/auth_event.dart';\r\n+import '../../auth/bloc/auth_state.dart';\r\n \r\n class MainDashboard extends StatefulWidget {\r\n   @override\r\n   _MainDashboardState createState() => _MainDashboardState();\r\n@@ -42,36 +42,11 @@\n   }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    final authProvider = Provider.of<AuthProvider>(context);\r\n     return Scaffold(\r\n       backgroundColor: Color(0xFF1A1A1A),\r\n-      appBar: AppBar(\r\n-        leading: IconButton(\r\n-          icon: Icon(Icons.menu),\r\n-          onPressed: () {\r\n-            Scaffold.of(context).openDrawer();\r\n-          },\r\n-        ),\r\n-        title: Text('Main Dashboard'),\r\n-        actions: [\r\n-          IconButton(\r\n-            icon: Icon(Icons.notifications),\r\n-            onPressed: () {\r\n-              ScaffoldMessenger.of(context).showSnackBar(\r\n-                SnackBar(content: Text('Notifications not implemented yet')),\r\n-              );\r\n-            },\r\n-          ),\r\n-          IconButton(\r\n-            icon: Icon(Icons.logout),\r\n-            onPressed: () async {\r\n-              await authProvider.signOut();\r\n-            },\r\n-          ),\r\n-        ],\r\n-      ),\r\n+      appBar: _buildAppBar(),\r\n       body: BlocListener<SystemStateBloc, SystemStateState>(\r\n         listener: (context, state) {\r\n           if (state.isError) {\r\n             ScaffoldMessenger.of(context).showSnackBar(\r\n@@ -110,8 +85,40 @@\n       floatingActionButton: _buildSpeedDial(context),\r\n     );\r\n   }\r\n \r\n+  PreferredSizeWidget _buildAppBar() {\r\n+    return AppBar(\r\n+      leading: IconButton(\r\n+        icon: Icon(Icons.menu),\r\n+        onPressed: () {\r\n+          Scaffold.of(context).openDrawer();\r\n+        },\r\n+      ),\r\n+      title: Text('Main Dashboard'),\r\n+      actions: [\r\n+        IconButton(\r\n+          icon: Icon(Icons.notifications),\r\n+          onPressed: () {\r\n+            ScaffoldMessenger.of(context).showSnackBar(\r\n+              SnackBar(content: Text('Notifications not implemented yet')),\r\n+            );\r\n+          },\r\n+        ),\r\n+        BlocBuilder<AuthBloc, AuthState>(\r\n+          builder: (context, state) {\r\n+            return IconButton(\r\n+              icon: Icon(Icons.logout),\r\n+              onPressed: () {\r\n+                context.read<AuthBloc>().add(SignOutRequested());\r\n+              },\r\n+            );\r\n+          },\r\n+        ),\r\n+      ],\r\n+    );\r\n+  }\r\n+\r\n   Widget _buildTabBar() {\r\n     return Container(\r\n       decoration: BoxDecoration(\r\n         boxShadow: [\r\n"
                }
            ],
            "date": 1734376761208,
            "name": "Commit-0",
            "content": "\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:flutter_animate/flutter_animate.dart';\r\nimport 'package:flutter_speed_dial/flutter_speed_dial.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport '../../auth/providers/auth_provider.dart';\r\nimport '../../../blocs/system_state/bloc/system_state_bloc.dart';\r\nimport '../../../blocs/system_state/bloc/system_state_event.dart';\r\nimport '../../../blocs/system_state/bloc/system_state_state.dart';\r\nimport '../../components/widgets/component_control_overlay.dart';\r\nimport '../../monitoring/widgets/data_visualization.dart';\r\nimport '../../monitoring/widgets/graph_overlay.dart';\r\nimport '../../monitoring/widgets/parameter_display.dart';\r\nimport '../../recipes/widgets/recipe_control.dart';\r\nimport '../../alarms/widgets/alarm_display.dart';\r\nimport '../widgets/system_diagram_view.dart';\r\nimport '../../monitoring/widgets/troubleshooting_overlay.dart';\r\n\r\nclass MainDashboard extends StatefulWidget {\r\n  @override\r\n  _MainDashboardState createState() => _MainDashboardState();\r\n}\r\n\r\nclass _MainDashboardState extends State<MainDashboard> {\r\n  final List<_TabItem> _tabs = [\r\n    _TabItem(Icons.dashboard_rounded, 'Overview'),\r\n    _TabItem(Icons.science_rounded, 'Recipe'),\r\n    _TabItem(Icons.warning_rounded, 'Alarms'),\r\n    _TabItem(Icons.analytics_rounded, 'Data'),\r\n  ];\r\n\r\n  int _selectedTabIndex = 0;\r\n  late Widget _currentOverlay;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    _currentOverlay = ComponentControlOverlay(overlayId: 'main_dashboard');\r\n    // Initialize system state\r\n    context.read<SystemStateBloc>().add(InitializeSystem());\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final authProvider = Provider.of<AuthProvider>(context);\r\n    return Scaffold(\r\n      backgroundColor: Color(0xFF1A1A1A),\r\n      appBar: AppBar(\r\n        leading: IconButton(\r\n          icon: Icon(Icons.menu),\r\n          onPressed: () {\r\n            Scaffold.of(context).openDrawer();\r\n          },\r\n        ),\r\n        title: Text('Main Dashboard'),\r\n        actions: [\r\n          IconButton(\r\n            icon: Icon(Icons.notifications),\r\n            onPressed: () {\r\n              ScaffoldMessenger.of(context).showSnackBar(\r\n                SnackBar(content: Text('Notifications not implemented yet')),\r\n              );\r\n            },\r\n          ),\r\n          IconButton(\r\n            icon: Icon(Icons.logout),\r\n            onPressed: () async {\r\n              await authProvider.signOut();\r\n            },\r\n          ),\r\n        ],\r\n      ),\r\n      body: BlocListener<SystemStateBloc, SystemStateState>(\r\n        listener: (context, state) {\r\n          if (state.isError) {\r\n            ScaffoldMessenger.of(context).showSnackBar(\r\n              SnackBar(\r\n                content: Text(state.error ?? 'An error occurred'),\r\n                backgroundColor: Colors.red,\r\n              ),\r\n            );\r\n          }\r\n          if (state.isEmergencyStopped) {\r\n            ScaffoldMessenger.of(context).showSnackBar(\r\n              SnackBar(\r\n                content: Text(\r\n                  'Emergency Stop Activated!',\r\n                  style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),\r\n                ),\r\n                backgroundColor: Color(0xFF8B0000),\r\n                duration: Duration(seconds: 5),\r\n                behavior: SnackBarBehavior.floating,\r\n                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\r\n              ),\r\n            );\r\n          }\r\n        },\r\n        child: SafeArea(\r\n          child: Column(\r\n            children: [\r\n              _buildTabBar(),\r\n              Expanded(\r\n                child: _buildTabContent(),\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n      floatingActionButton: _buildSpeedDial(context),\r\n    );\r\n  }\r\n\r\n  Widget _buildTabBar() {\r\n    return Container(\r\n      decoration: BoxDecoration(\r\n        boxShadow: [\r\n          BoxShadow(\r\n            color: Colors.black.withOpacity(0.1),\r\n            blurRadius: 3,\r\n            offset: Offset(0, 1),\r\n          ),\r\n        ],\r\n      ),\r\n      child: Row(\r\n        mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n        children: _tabs.asMap().entries.map((entry) {\r\n          final index = entry.key;\r\n          final tab = entry.value;\r\n          return _buildTabItem(tab.icon, tab.label, index);\r\n        }).toList(),\r\n      ),\r\n    ).animate().fadeIn(duration: 500.ms, curve: Curves.easeInOut);\r\n  }\r\n\r\n  Widget _buildTabItem(IconData icon, String label, int index) {\r\n    final isSelected = _selectedTabIndex == index;\r\n    return InkWell(\r\n      onTap: () => _selectTab(index),\r\n      child: Container(\r\n        padding: EdgeInsets.symmetric(vertical: 12, horizontal: 16),\r\n        decoration: BoxDecoration(\r\n          border: Border(\r\n            bottom: BorderSide(\r\n              color: isSelected ? Color(0xFF4A4A4A) : Colors.transparent,\r\n              width: 2,\r\n            ),\r\n          ),\r\n        ),\r\n        child: Column(\r\n          mainAxisSize: MainAxisSize.min,\r\n          children: [\r\n            Icon(\r\n              icon,\r\n              color: isSelected ? Color(0xFFD0D0D0) : Color(0xFF808080),\r\n              size: 24,\r\n            ),\r\n            SizedBox(height: 4),\r\n            Text(\r\n              label,\r\n              style: TextStyle(\r\n                color: isSelected ? Color(0xFFD0D0D0) : Color(0xFF808080),\r\n                fontWeight: FontWeight.w500,\r\n                fontSize: 12,\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  void _selectTab(int index) {\r\n    if (_selectedTabIndex != index) {\r\n      setState(() => _selectedTabIndex = index);\r\n    }\r\n  }\r\n\r\n  Widget _buildTabContent() {\r\n    return AnimatedSwitcher(\r\n      duration: Duration(milliseconds: 300),\r\n      switchInCurve: Curves.easeInOut,\r\n      switchOutCurve: Curves.easeInOut,\r\n      transitionBuilder: (Widget child, Animation<double> animation) {\r\n        return FadeTransition(\r\n          opacity: animation,\r\n          child: SlideTransition(\r\n            position: Tween<Offset>(\r\n              begin: Offset(0, -0.1),\r\n              end: Offset.zero,\r\n            ).animate(animation),\r\n            child: child,\r\n          ),\r\n        );\r\n      },\r\n      child: _getSelectedTabContent(),\r\n    );\r\n  }\r\n\r\n  Widget _getSelectedTabContent() {\r\n    switch (_selectedTabIndex) {\r\n      case 0:\r\n        return _buildOverviewTab(context);\r\n      case 1:\r\n        return _buildRecipeControlTab(context);\r\n      case 2:\r\n        return AlarmDisplay();\r\n      case 3:\r\n        return DataVisualization();\r\n      default:\r\n        return SizedBox.shrink();\r\n    }\r\n  }\r\n\r\n  Widget _buildOverviewTab(BuildContext context) {\r\n    return BlocBuilder<SystemStateBloc, SystemStateState>(\r\n      builder: (context, state) {\r\n        return LayoutBuilder(\r\n          builder: (context, constraints) {\r\n            final isLargeScreen = constraints.maxWidth > 600;\r\n            return Column(\r\n              children: [\r\n                Expanded(\r\n                  flex: isLargeScreen ? 2 : 1,\r\n                  child: Card(\r\n                    margin: EdgeInsets.all(12),\r\n                    child: ClipRRect(\r\n                      borderRadius: BorderRadius.circular(16),\r\n                      child: Stack(\r\n                        children: [\r\n                          SystemDiagramView(\r\n                            overlays: [_currentOverlay],\r\n                            zoomFactor: 1.0,\r\n                            enableOverlaySwiping: true,\r\n                          ),\r\n                          Positioned(\r\n                            top: 12,\r\n                            left: 12,\r\n                            child: _buildOverlaySelector(),\r\n                          ),\r\n                        ],\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n                Expanded(\r\n                  flex: 1,\r\n                  child: Card(\r\n                    margin: EdgeInsets.symmetric(horizontal: 12, vertical: 6),\r\n                    child: Padding(\r\n                      padding: const EdgeInsets.all(12),\r\n                      child: ParameterDisplay(),\r\n                    ),\r\n                  ),\r\n                ),\r\n                _buildSystemStatusButton(state),\r\n              ],\r\n            );\r\n          },\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  Widget _buildSystemStatusButton(SystemStateState state) {\r\n    return Padding(\r\n      padding: const EdgeInsets.all(12),\r\n      child: ElevatedButton.icon(\r\n        onPressed: () => Navigator.of(context).pushNamed('/system_overview'),\r\n        icon: Icon(Icons.fullscreen, size: 18),\r\n        label: Text('Full System Overview', style: TextStyle(fontSize: 14)),\r\n        style: ElevatedButton.styleFrom(\r\n          foregroundColor: Color(0xFFFFFFFF),\r\n          backgroundColor: state.isError ? Color(0xFF8B0000) : Color(0xFF4A4A4A),\r\n          minimumSize: Size(double.infinity, 48),\r\n          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\r\n          elevation: 0,\r\n          padding: EdgeInsets.symmetric(vertical: 12, horizontal: 16),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildOverlaySelector() {\r\n    return Container(\r\n      decoration: BoxDecoration(\r\n        color: Color(0xFF2A2A2A).withOpacity(0.8),\r\n        borderRadius: BorderRadius.circular(12),\r\n      ),\r\n      child: PopupMenuButton<String>(\r\n        icon: Icon(Icons.layers, color: Color(0xFFD0D0D0), size: 24),\r\n        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\r\n        color: Color(0xFF3A3A3A),\r\n        padding: EdgeInsets.zero,\r\n        onSelected: (String value) {\r\n          setState(() {\r\n            switch (value) {\r\n              case 'Control':\r\n                _currentOverlay = ComponentControlOverlay(overlayId: 'main_dashboard');\r\n                break;\r\n              case 'Graph':\r\n                _currentOverlay = GraphOverlay(overlayId: 'main_dashboard');\r\n                break;\r\n              case 'Troubleshoot':\r\n                _currentOverlay = TroubleshootingOverlay(overlayId: 'main_dashboard');\r\n                break;\r\n            }\r\n          });\r\n        },\r\n        itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[\r\n          PopupMenuItem<String>(\r\n            value: 'Control',\r\n            child: Text('Control', style: TextStyle(fontSize: 14, color: Color(0xFFD0D0D0))),\r\n          ),\r\n          PopupMenuItem<String>(\r\n            value: 'Graph',\r\n            child: Text('Graph', style: TextStyle(fontSize: 14, color: Color(0xFFD0D0D0))),\r\n          ),\r\n          PopupMenuItem<String>(\r\n            value: 'Troubleshoot',\r\n            child: Text('Troubleshoot', style: TextStyle(fontSize: 14, color: Color(0xFFD0D0D0))),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildRecipeControlTab(BuildContext context) {\r\n    return RecipeControl(\r\n    );\r\n  }\r\n\r\n  Widget _buildSpeedDial(BuildContext context) {\r\n    return SpeedDial(\r\n      animatedIcon: AnimatedIcons.menu_close,\r\n      animatedIconTheme: IconThemeData(size: 22.0),\r\n      backgroundColor: Color(0xFF3A3A3A),\r\n      foregroundColor: Color(0xFFD0D0D0),\r\n      visible: true,\r\n      curve: Curves.easeInOut,\r\n      children: [\r\n        SpeedDialChild(\r\n          child: Icon(Icons.stop, size: 24),\r\n          backgroundColor: Color(0xFF8B0000),\r\n          foregroundColor: Color(0xFFFFFFFF),\r\n          label: 'Emergency Stop',\r\n          labelStyle: TextStyle(fontSize: 14, color: Color(0xFFD0D0D0)),\r\n          onTap: () => _handleEmergencyStop(context),\r\n        ),\r\n        SpeedDialChild(\r\n          child: Icon(Icons.settings, size: 24),\r\n          backgroundColor: Color(0xFF4A4A4A),\r\n          foregroundColor: Color(0xFFD0D0D0),\r\n          label: 'Settings',\r\n          labelStyle: TextStyle(fontSize: 14, color: Color(0xFFD0D0D0)),\r\n          onTap: () {\r\n            // TODO: Implement settings navigation\r\n          },\r\n        ),\r\n        SpeedDialChild(\r\n          child: Icon(Icons.help, size: 24),\r\n          backgroundColor: Color(0xFF3A3A3A),\r\n          foregroundColor: Color(0xFFD0D0D0),\r\n          label: 'Help',\r\n          labelStyle: TextStyle(fontSize: 14, color: Color(0xFFD0D0D0)),\r\n          onTap: () {\r\n            // TODO: Implement help functionality\r\n          },\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  void _handleEmergencyStop(BuildContext context) {\r\n    context.read<SystemStateBloc>().add(EmergencyStop());\r\n  }\r\n}\r\n\r\nclass _TabItem {\r\n  final IconData icon;\r\n  final String label;\r\n\r\n  _TabItem(this.icon, this.label);\r\n}"
        }
    ]
}