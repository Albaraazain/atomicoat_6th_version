{
    "sourceFile": "lib/features/components/repository/system_component_repository.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1734376760285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734433678493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n \r\n \r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n+import 'package:experiment_planner/shared/base/base_repository.dart';\r\n import '../models/system_component.dart';\r\n-import '../../../repositories/base_repository.dart';\r\n \r\n class SystemComponentRepository extends BaseRepository<SystemComponent> {\r\n   SystemComponentRepository() : super('system_components');\r\n \r\n"
                }
            ],
            "date": 1734376760285,
            "name": "Commit-0",
            "content": "\r\n\r\nimport 'package:cloud_firestore/cloud_firestore.dart';\r\nimport '../models/system_component.dart';\r\nimport '../../../repositories/base_repository.dart';\r\n\r\nclass SystemComponentRepository extends BaseRepository<SystemComponent> {\r\n  SystemComponentRepository() : super('system_components');\r\n\r\n  @override\r\n  Future<List<SystemComponent>> getAll({String? userId}) async {\r\n    return await super.getAll(userId: userId);\r\n  }\r\n\r\n  @override\r\n  Future<void> add(String id, SystemComponent component, {String? userId}) async {\r\n    await super.add(id, component, userId: userId);\r\n  }\r\n\r\n  @override\r\n  Future<void> update(String id, SystemComponent component, {String? userId}) async {\r\n    await super.update(id, component, userId: userId);\r\n  }\r\n\r\n  @override\r\n  Future<void> delete(String id, {String? userId}) async {\r\n    await super.delete(id, userId: userId);\r\n  }\r\n\r\n  Future<SystemComponent?> getById(String id, {String? userId}) async {\r\n    return await super.get(id, userId: userId);\r\n  }\r\n\r\n  Future<void> updateComponentState(String id, Map<String, double> newState, {required String userId}) async {\r\n    await getUserCollection(userId).doc(id).update({'currentValues': newState});\r\n  }\r\n\r\n  Future<List<SystemComponent>> getActiveComponents(String userId) async {\r\n    QuerySnapshot activeComponents = await getUserCollection(userId)\r\n        .where('isActivated', isEqualTo: true)\r\n        .get();\r\n\r\n    return activeComponents.docs\r\n        .map((doc) => fromJson(doc.data() as Map<String, dynamic>))\r\n        .toList();\r\n  }\r\n\r\n  @override\r\n  SystemComponent fromJson(Map<String, dynamic> json) => SystemComponent.fromJson(json);\r\n}"
        }
    ]
}