{
    "sourceFile": "lib/features/components/bloc/component_event.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734376760286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734376760286,
            "name": "Commit-0",
            "content": "\r\n\r\nimport 'package:equatable/equatable.dart';\r\nimport '../models/data_point.dart';\r\nimport '../models/system_component.dart';\r\n\r\nabstract class ComponentEvent extends Equatable {\r\n  const ComponentEvent();\r\n\r\n  @override\r\n  List<Object?> get props => [];\r\n}\r\n\r\nclass ComponentInitialized extends ComponentEvent {\r\n  final String componentName;\r\n\r\n  const ComponentInitialized(this.componentName);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName];\r\n}\r\n\r\nclass ComponentCurrentValuesUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final Map<String, double> currentValues;\r\n\r\n  const ComponentCurrentValuesUpdated(this.componentName, this.currentValues);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, currentValues];\r\n}\r\n\r\nclass ComponentSetValuesUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final Map<String, double> setValues;\r\n\r\n  const ComponentSetValuesUpdated(this.componentName, this.setValues);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, setValues];\r\n}\r\n\r\nclass ComponentActivationToggled extends ComponentEvent {\r\n  final String componentName;\r\n  final bool isActivated;\r\n\r\n  const ComponentActivationToggled(this.componentName, this.isActivated);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, isActivated];\r\n}\r\n\r\nclass ComponentParameterUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final String parameter;\r\n  final double value;\r\n\r\n  const ComponentParameterUpdated(\r\n    this.componentName,\r\n    this.parameter,\r\n    this.value,\r\n  );\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, parameter, value];\r\n}\r\n\r\nclass ComponentDataPointAdded extends ComponentEvent {\r\n  final String componentName;\r\n  final String parameter;\r\n  final DataPoint dataPoint;\r\n  final int maxDataPoints;\r\n\r\n  const ComponentDataPointAdded(\r\n    this.componentName,\r\n    this.parameter,\r\n    this.dataPoint, {\r\n    this.maxDataPoints = 1000,\r\n  });\r\n\r\n  @override\r\n  List<Object?> get props =>\r\n      [componentName, parameter, dataPoint, maxDataPoints];\r\n}\r\n\r\n// New events to match provider functionality\r\nclass ComponentParameterValueUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final String parameter;\r\n  final double value;\r\n\r\n  const ComponentParameterValueUpdated(\r\n    this.componentName,\r\n    this.parameter,\r\n    this.value,\r\n  );\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, parameter, value];\r\n}\r\n\r\nclass ComponentCleared extends ComponentEvent {\r\n  final String componentName;\r\n\r\n  const ComponentCleared(this.componentName);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName];\r\n}\r\n\r\nclass ComponentSetValueUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final String parameter;\r\n  final double value;\r\n  final Map<String, double> setValues; // Add this field\r\n\r\n  ComponentSetValueUpdated(\r\n    this.componentName,\r\n    this.parameter,\r\n    this.value,\r\n  ) : setValues = <String, double>{parameter: value};\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, parameter, value, setValues];\r\n}\r\n\r\nclass ComponentValueUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final Map<String, double> currentValues;\r\n\r\n  const ComponentValueUpdated(this.componentName, this.currentValues);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, currentValues];\r\n}\r\n\r\nclass ComponentErrorAdded extends ComponentEvent {\r\n  final String componentName;\r\n  final String errorMessage;\r\n\r\n  const ComponentErrorAdded(this.componentName, this.errorMessage);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, errorMessage];\r\n}\r\n\r\nclass ComponentErrorsCleared extends ComponentEvent {\r\n  final String componentName;\r\n\r\n  const ComponentErrorsCleared(this.componentName);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName];\r\n}\r\n\r\nclass ComponentStatusUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final ComponentStatus status;\r\n\r\n  const ComponentStatusUpdated(this.componentName, this.status);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, status];\r\n}\r\n\r\nclass ComponentCheckDateUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final DateTime checkDate;\r\n\r\n  const ComponentCheckDateUpdated(this.componentName, this.checkDate);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, checkDate];\r\n}\r\n\r\nclass ComponentLimitsUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final Map<String, double>? minValues;\r\n  final Map<String, double>? maxValues;\r\n\r\n  const ComponentLimitsUpdated(\r\n    this.componentName, {\r\n    this.minValues,\r\n    this.maxValues,\r\n  });\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, minValues, maxValues];\r\n}\r\n\r\nclass LoadComponents extends ComponentEvent {\r\n  final String? userId;\r\n  const LoadComponents({this.userId});\r\n\r\n  @override\r\n  List<Object> get props => [userId ?? ''];\r\n}\r\n"
        }
    ]
}