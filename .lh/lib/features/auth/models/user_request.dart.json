{
    "sourceFile": "lib/features/auth/models/user_request.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1734377629343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734377672748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import 'package:experiment_planner/core/enums/user_request_status.dart';\r\n+\r\n class UserRequest {\r\n   final String userId;\r\n   final String email;\r\n   final String name;\r\n"
                },
                {
                    "date": 1734431306394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+// lib/features/auth/models/user_request.dart\r\n+import '../../../core/enums/user_request_status.dart';\r\n+\r\n+class UserRequest {\r\n+  final String userId;\r\n+  final String email;\r\n+  final String name;\r\n+  final String machineSerial;\r\n+  final UserRequestStatus status;\r\n+\r\n+  UserRequest({\r\n+    required this.userId,\r\n+    required this.email,\r\n+    required this.name,\r\n+    required this.machineSerial,\r\n+    this.status = UserRequestStatus.pending,\r\n+  });\r\n+\r\n+  Map<String, dynamic> toJson() => {\r\n+    'userId': userId,\r\n+    'email': email,\r\n+    'name': name,\r\n+    'machineSerial': machineSerial,\r\n+    'status': status.toJson(),\r\n+  };\r\n+\r\n+  factory UserRequest.fromJson(Map<String, dynamic> json) => UserRequest(\r\n+    userId: json['userId'] ?? '',\r\n+    email: json['email'] ?? '',\r\n+    name: json['name'] ?? '',\r\n+    machineSerial: json['machineSerial'] ?? '',\r\n+    status: _parseStatus(json['status']),\r\n+  );\r\n+\r\n+  static UserRequestStatus _parseStatus(dynamic statusString) {\r\n+    if (statusString == null) return UserRequestStatus.pending;\r\n+    try {\r\n+      return UserRequestStatus.values.firstWhere(\r\n+        (status) => status.toString().split('.').last == statusString,\r\n+        orElse: () => UserRequestStatus.pending,\r\n+      );\r\n+    } catch (e) {\r\n+      print('Error parsing UserRequestStatus: $e');\r\n+      return UserRequestStatus.pending;\r\n+    }\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1734457752562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,82 +1,58 @@\n // lib/features/auth/models/user_request.dart\r\n import '../../../core/enums/user_request_status.dart';\r\n \r\n class UserRequest {\r\n+  final String id;\r\n   final String userId;\r\n+  final String name;\r\n   final String email;\r\n-  final String name;\r\n   final String machineSerial;\r\n-  final UserRequestStatus status;\r\n+  final UserRequestStatus status; // Changed from String to UserRequestStatus\r\n+  final DateTime createdAt;\r\n \r\n   UserRequest({\r\n+    required this.id,\r\n     required this.userId,\r\n+    required this.name,\r\n     required this.email,\r\n-    required this.name,\r\n     required this.machineSerial,\r\n-    this.status = UserRequestStatus.pending,\r\n+    this.status = UserRequestStatus.pending, // Added default value\r\n+    required this.createdAt,\r\n   });\r\n \r\n-  Map<String, dynamic> toJson() => {\r\n-    'userId': userId,\r\n-    'email': email,\r\n-    'name': name,\r\n-    'machineSerial': machineSerial,\r\n-    'status': status.toJson(),\r\n-  };\r\n+  factory UserRequest.fromJson(Map<String, dynamic> json) {\r\n+    return UserRequest(\r\n+      id: json['id'] as String,\r\n+      userId: json['userId'] as String,\r\n+      name: json['name'] as String,\r\n+      email: json['email'] as String,\r\n+      machineSerial: json['machineSerial'] as String,\r\n+      status: _parseStatus(json['status']), // Added status parsing\r\n+      createdAt: DateTime.parse(json['createdAt'] as String),\r\n+    );\r\n+  }\r\n \r\n-  factory UserRequest.fromJson(Map<String, dynamic> json) => UserRequest(\r\n-    userId: json['userId'] ?? '',\r\n-    email: json['email'] ?? '',\r\n-    name: json['name'] ?? '',\r\n-    machineSerial: json['machineSerial'] ?? '',\r\n-    status: _parseStatus(json['status']),\r\n-  );\r\n+  Map<String, dynamic> toJson() {\r\n+    return {\r\n+      'id': id,\r\n+      'userId': userId,\r\n+      'name': name,\r\n+      'email': email,\r\n+      'machineSerial': machineSerial,\r\n+      'status': status.toString().split('.').last, // Proper enum serialization\r\n+      'createdAt': createdAt.toIso8601String(),\r\n+    };\r\n+  }\r\n \r\n-  static UserRequestStatus _parseStatus(dynamic statusString) {\r\n-    if (statusString == null) return UserRequestStatus.pending;\r\n-    try {\r\n+  // Helper method to parse status from string or enum\r\n+  static UserRequestStatus _parseStatus(dynamic status) {\r\n+    if (status is UserRequestStatus) return status;\r\n+    if (status is String) {\r\n       return UserRequestStatus.values.firstWhere(\r\n-        (status) => status.toString().split('.').last == statusString,\r\n+        (e) => e.toString().split('.').last.toLowerCase() == status.toLowerCase(),\r\n         orElse: () => UserRequestStatus.pending,\r\n       );\r\n-    } catch (e) {\r\n-      print('Error parsing UserRequestStatus: $e');\r\n-      return UserRequestStatus.pending;\r\n     }\r\n+    return UserRequestStatus.pending;\r\n   }\r\n\\ No newline at end of file\n }\r\n-import 'package:experiment_planner/core/enums/user_request_status.dart';\r\n-\r\n-class UserRequest {\r\n-  final String userId;\r\n-  final String email;\r\n-  final String name;\r\n-  final String machineSerial;\r\n-  final UserRequestStatus status;\r\n-\r\n-  UserRequest({\r\n-    required this.userId,\r\n-    required this.email,\r\n-    required this.name,\r\n-    required this.machineSerial,\r\n-    this.status = UserRequestStatus.pending,\r\n-  });\r\n-\r\n-  Map<String, dynamic> toJson() => {\r\n-    'userId': userId,\r\n-    'email': email,\r\n-    'name': name,\r\n-    'machineSerial': machineSerial,\r\n-    'status': status.toString(),\r\n-  };\r\n-\r\n-  factory UserRequest.fromJson(Map<String, dynamic> json) => UserRequest(\r\n-    userId: json['userId'],\r\n-    email: json['email'],\r\n-    name: json['name'],\r\n-    machineSerial: json['machineSerial'],\r\n-    status: UserRequestStatus.values.firstWhere(\r\n-            (e) => e.toString() == json['status'],\r\n-        orElse: () => UserRequestStatus.pending),\r\n-  );\r\n-}\n"
                }
            ],
            "date": 1734377629343,
            "name": "Commit-0",
            "content": "class UserRequest {\r\n  final String userId;\r\n  final String email;\r\n  final String name;\r\n  final String machineSerial;\r\n  final UserRequestStatus status;\r\n\r\n  UserRequest({\r\n    required this.userId,\r\n    required this.email,\r\n    required this.name,\r\n    required this.machineSerial,\r\n    this.status = UserRequestStatus.pending,\r\n  });\r\n\r\n  Map<String, dynamic> toJson() => {\r\n    'userId': userId,\r\n    'email': email,\r\n    'name': name,\r\n    'machineSerial': machineSerial,\r\n    'status': status.toString(),\r\n  };\r\n\r\n  factory UserRequest.fromJson(Map<String, dynamic> json) => UserRequest(\r\n    userId: json['userId'],\r\n    email: json['email'],\r\n    name: json['name'],\r\n    machineSerial: json['machineSerial'],\r\n    status: UserRequestStatus.values.firstWhere(\r\n            (e) => e.toString() == json['status'],\r\n        orElse: () => UserRequestStatus.pending),\r\n  );\r\n}"
        }
    ]
}