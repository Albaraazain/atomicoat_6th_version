{
    "sourceFile": "lib/features/auth/presentation/screens/password_reset_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734379039928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734379039928,
            "name": "Commit-0",
            "content": "// lib/features/auth/presentation/screens/password_reset_screen.dart\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport '../bloc/password_reset_bloc.dart';\r\nimport '../widgets/auth_text_field.dart';\r\nimport '../widgets/auth_button.dart';\r\nimport '../../../../core/utils/validators.dart';\r\n\r\nclass PasswordResetScreen extends StatefulWidget {\r\n  const PasswordResetScreen({super.key});\r\n\r\n  @override\r\n  State<PasswordResetScreen> createState() => _PasswordResetScreenState();\r\n}\r\n\r\nclass _PasswordResetScreenState extends State<PasswordResetScreen> {\r\n  final _formKey = GlobalKey<FormState>();\r\n  final _emailController = TextEditingController();\r\n\r\n  @override\r\n  void dispose() {\r\n    _emailController.dispose();\r\n    super.dispose();\r\n  }\r\n\r\n  void _handleSubmit() {\r\n    if (_formKey.currentState?.validate() ?? false) {\r\n      context.read<PasswordResetBloc>().add(\r\n        PasswordResetEvent.resetRequested(\r\n          email: _emailController.text,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('Reset Password'),\r\n      ),\r\n      body: BlocConsumer<PasswordResetBloc, PasswordResetState>(\r\n        listener: (context, state) {\r\n          state.mapOrNull(\r\n            success: (_) {\r\n              ScaffoldMessenger.of(context).showSnackBar(\r\n                const SnackBar(\r\n                  content: Text('Password reset email sent. Please check your inbox.'),\r\n                ),\r\n              );\r\n              Navigator.of(context).pop();\r\n            },\r\n            failure: (state) {\r\n              ScaffoldMessenger.of(context).showSnackBar(\r\n                SnackBar(\r\n                  content: Text(state.failure.toString()),\r\n                  backgroundColor: Colors.red,\r\n                ),\r\n              );\r\n            },\r\n          );\r\n        },\r\n        builder: (context, state) {\r\n          return SafeArea(\r\n            child: Padding(\r\n              padding: const EdgeInsets.all(24),\r\n              child: Form(\r\n                key: _formKey,\r\n                child: Column(\r\n                  crossAxisAlignment: CrossAxisAlignment.start,\r\n                  children: [\r\n                    Text(\r\n                      'Forgot Password?',\r\n                      style: Theme.of(context).textTheme.headlineMedium,\r\n                    ),\r\n                    const SizedBox(height: 8),\r\n                    Text(\r\n                      'Enter your email to receive password reset instructions',\r\n                      style: Theme.of(context).textTheme.bodyLarge,\r\n                    ),\r\n                    const SizedBox(height: 32),\r\n                    AuthTextField(\r\n                      label: 'Email',\r\n                      hint: 'Enter your email',\r\n                      controller: _emailController,\r\n                      keyboardType: TextInputType.emailAddress,\r\n                      validator: Validators.validateEmail,\r\n                      textInputAction: TextInputAction.done,\r\n                      onSubmitted: _handleSubmit,\r\n                    ),\r\n                    const SizedBox(height: 24),\r\n                    AuthButton(\r\n                      text: 'Send Reset Link',\r\n                      onPressed: _handleSubmit,\r\n                      isLoading: state is PasswordResetting,\r\n                    ),\r\n                  ],\r\n                ),\r\n              ),\r\n            ),\r\n          );\r\n        },\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}