{
    "sourceFile": "lib/features/auth/presentation/screens/login_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734378884061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734378884061,
            "name": "Commit-0",
            "content": "// lib/features/auth/presentation/screens/login_screen.dart\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport '../bloc/auth_bloc.dart';\r\nimport '../widgets/auth_text_field.dart';\r\nimport '../widgets/auth_button.dart';\r\nimport '../../../../core/utils/validators.dart';\r\n\r\nclass LoginScreen extends StatefulWidget {\r\n  const LoginScreen({super.key});\r\n\r\n  @override\r\n  State<LoginScreen> createState() => _LoginScreenState();\r\n}\r\n\r\nclass _LoginScreenState extends State<LoginScreen> {\r\n  final _formKey = GlobalKey<FormState>();\r\n  final _emailController = TextEditingController();\r\n  final _passwordController = TextEditingController();\r\n\r\n  @override\r\n  void dispose() {\r\n    _emailController.dispose();\r\n    _passwordController.dispose();\r\n    super.dispose();\r\n  }\r\n\r\n  void _handleSubmit() {\r\n    if (_formKey.currentState?.validate() ?? false) {\r\n      context.read<AuthBloc>().add(\r\n            AuthEvent.signInRequested(\r\n              email: _emailController.text,\r\n              password: _passwordController.text,\r\n            ),\r\n          );\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: BlocConsumer<AuthBloc, AuthState>(\r\n        listener: (context, state) {\r\n          state.mapOrNull(\r\n            authenticated: (_) {\r\n              Navigator.of(context).pushReplacementNamed('/home');\r\n            },\r\n            failure: (state) {\r\n              ScaffoldMessenger.of(context).showSnackBar(\r\n                SnackBar(\r\n                  content: Text(state.failure.toString()),\r\n                  backgroundColor: Colors.red,\r\n                ),\r\n              );\r\n            },\r\n          );\r\n        },\r\n        builder: (context, state) {\r\n          return SafeArea(\r\n            child: Center(\r\n              child: SingleChildScrollView(\r\n                padding: const EdgeInsets.all(24),\r\n                child: Form(\r\n                  key: _formKey,\r\n                  child: Column(\r\n                    mainAxisAlignment: MainAxisAlignment.center,\r\n                    crossAxisAlignment: CrossAxisAlignment.start,\r\n                    children: [\r\n                      Text(\r\n                        'Welcome Back',\r\n                        style: Theme.of(context).textTheme.headlineMedium,\r\n                      ),\r\n                      const SizedBox(height: 8),\r\n                      Text(\r\n                        'Sign in to continue',\r\n                        style: Theme.of(context).textTheme.bodyLarge,\r\n                      ),\r\n                      const SizedBox(height: 32),\r\n                      AuthTextField(\r\n                        label: 'Email',\r\n                        hint: 'Enter your email',\r\n                        controller: _emailController,\r\n                        keyboardType: TextInputType.emailAddress,\r\n                        validator: Validators.validateEmail,\r\n                      ),\r\n                      const SizedBox(height: 16),\r\n                      AuthTextField(\r\n                        label: 'Password',\r\n                        hint: 'Enter your password',\r\n                        controller: _passwordController,\r\n                        obscureText: true,\r\n                        validator: Validators.validatePassword,\r\n                        textInputAction: TextInputAction.done,\r\n                        onSubmitted: _handleSubmit,\r\n                      ),\r\n                      const SizedBox(height: 24),\r\n                      AuthButton(\r\n                        text: 'Login',\r\n                        onPressed: _handleSubmit,\r\n                        isLoading: state is Authenticating,\r\n                      ),\r\n                      const SizedBox(height: 16),\r\n                      Center(\r\n                        child: TextButton(\r\n                          onPressed: () {\r\n                            Navigator.pushNamed(context, '/register');\r\n                          },\r\n                          child: const Text('Don\\'t have an account? Register'),\r\n                        ),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                ),\r\n              ),\r\n            ),\r\n          );\r\n        },\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}