{
    "sourceFile": "lib/features/auth/presentation/screens/admin/pending_requests_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1734379242284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734426894323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n-// lib/features/auth/presentation/screens/admin/pending_requests_screen.dart\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n+import 'package:auto_route/auto_route.dart';\r\n+import '../../../domain/entities/user_request.dart';\r\n import '../../bloc/pending_requests_bloc.dart';\r\n import '../../widgets/request_list_item.dart';\r\n \r\n @RoutePage()\r\n@@ -17,5 +18,128 @@\n           IconButton(\r\n             icon: const Icon(Icons.refresh),\r\n             onPressed: () {\r\n               context.read<PendingRequestsBloc>().add(\r\n-                const PendingRequest\n\\ No newline at end of file\n+                const PendingRequestsEvent.refreshRequested(),\r\n+              );\r\n+            },\r\n+          ),\r\n+        ],\r\n+      ),\r\n+      body: BlocConsumer<PendingRequestsBloc, PendingRequestsState>(\r\n+        listener: (context, state) {\r\n+          state.mapOrNull(\r\n+            failure: (state) {\r\n+              ScaffoldMessenger.of(context).showSnackBar(\r\n+                SnackBar(\r\n+                  content: Text(state.failure.toString()),\r\n+                  backgroundColor: Colors.red,\r\n+                ),\r\n+              );\r\n+            },\r\n+          );\r\n+        },\r\n+        builder: (context, state) {\r\n+          return state.map(\r\n+            initial: (_) => const Center(child: CircularProgressIndicator()),\r\n+            loading: (_) => const Center(child: CircularProgressIndicator()),\r\n+            loaded: (state) => _buildRequestList(context, state.requests),\r\n+            failure: (_) => const Center(\r\n+              child: Text('Failed to load requests'),\r\n+            ),\r\n+          );\r\n+        },\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  Widget _buildRequestList(BuildContext context, List<UserRequest> requests) {\r\n+    if (requests.isEmpty) {\r\n+      return Center(\r\n+        child: Column(\r\n+          mainAxisAlignment: MainAxisAlignment.center,\r\n+          children: [\r\n+            Icon(\r\n+              Icons.check_circle_outline,\r\n+              size: 64,\r\n+              color: Colors.green.withOpacity(0.5),\r\n+            ),\r\n+            const SizedBox(height: 16),\r\n+            Text(\r\n+              'No pending requests',\r\n+              style: Theme.of(context).textTheme.headline6,\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      );\r\n+    }\r\n+\r\n+    return ListView.builder(\r\n+      itemCount: requests.length,\r\n+      padding: const EdgeInsets.all(16),\r\n+      itemBuilder: (context, index) {\r\n+        final request = requests[index];\r\n+        return RequestListItem(\r\n+          request: request,\r\n+          onApprove: () => _showApproveDialog(context, request),\r\n+          onDeny: () => _showDenyDialog(context, request),\r\n+        );\r\n+      },\r\n+    );\r\n+  }\r\n+\r\n+  void _showApproveDialog(BuildContext context, UserRequest request) {\r\n+    showDialog(\r\n+      context: context,\r\n+      builder: (context) => AlertDialog(\r\n+        title: const Text('Approve Request'),\r\n+        content: Text('Are you sure you want to approve ${request.name}\\'s request?'),\r\n+        actions: [\r\n+          TextButton(\r\n+            onPressed: () => Navigator.pop(context),\r\n+            child: const Text('Cancel'),\r\n+          ),\r\n+          TextButton(\r\n+            onPressed: () {\r\n+              Navigator.pop(context);\r\n+              context.read<PendingRequestsBloc>().add(\r\n+                PendingRequestsEvent.approved(userId: request.userId),\r\n+              );\r\n+            },\r\n+            child: const Text('Approve'),\r\n+            style: TextButton.styleFrom(\r\n+              foregroundColor: Colors.green,\r\n+            ),\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  void _showDenyDialog(BuildContext context, UserRequest request) {\r\n+    showDialog(\r\n+      context: context,\r\n+      builder: (context) => AlertDialog(\r\n+        title: const Text('Deny Request'),\r\n+        content: Text('Are you sure you want to deny ${request.name}\\'s request?'),\r\n+        actions: [\r\n+          TextButton(\r\n+            onPressed: () => Navigator.pop(context),\r\n+            child: const Text('Cancel'),\r\n+          ),\r\n+          TextButton(\r\n+            onPressed: () {\r\n+              Navigator.pop(context);\r\n+              context.read<PendingRequestsBloc>().add(\r\n+                PendingRequestsEvent.denied(userId: request.userId),\r\n+              );\r\n+            },\r\n+            child: const Text('Deny'),\r\n+            style: TextButton.styleFrom(\r\n+              foregroundColor: Colors.red,\r\n+            ),\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1734428721574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n             ),\r\n             const SizedBox(height: 16),\r\n             Text(\r\n               'No pending requests',\r\n-              style: Theme.of(context).textTheme.headline6,\r\n+              style: Theme.of(context).textTheme.titleLarge,\r\n             ),\r\n           ],\r\n         ),\r\n       );\r\n"
                }
            ],
            "date": 1734379242284,
            "name": "Commit-0",
            "content": "// lib/features/auth/presentation/screens/admin/pending_requests_screen.dart\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport '../../bloc/pending_requests_bloc.dart';\r\nimport '../../widgets/request_list_item.dart';\r\n\r\n@RoutePage()\r\nclass PendingRequestsScreen extends StatelessWidget {\r\n  const PendingRequestsScreen({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('Pending Requests'),\r\n        actions: [\r\n          IconButton(\r\n            icon: const Icon(Icons.refresh),\r\n            onPressed: () {\r\n              context.read<PendingRequestsBloc>().add(\r\n                const PendingRequest"
        }
    ]
}