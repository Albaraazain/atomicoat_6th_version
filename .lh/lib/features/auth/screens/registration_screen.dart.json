{
    "sourceFile": "lib/features/auth/screens/registration_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734376760282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734376760282,
            "name": "Commit-0",
            "content": "\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\nimport '../providers/auth_provider.dart';\r\n\r\nclass RegistrationScreen extends StatefulWidget {\r\n  @override\r\n  _RegistrationScreenState createState() => _RegistrationScreenState();\r\n}\r\n\r\nclass _RegistrationScreenState extends State<RegistrationScreen> {\r\n  final _formKey = GlobalKey<FormState>();\r\n  String _email = '';\r\n  String _password = '';\r\n  String _name = '';\r\n  String _machineSerial = '';\r\n  bool _isLoading = false;\r\n  bool _obscurePassword = true;\r\n\r\n  void _submit() async {\r\n    if (_formKey.currentState!.validate()) {\r\n      _formKey.currentState!.save();\r\n      setState(() {\r\n        _isLoading = true;\r\n      });\r\n\r\n      final authProvider = Provider.of<AuthProvider>(context, listen: false);\r\n      try{\r\n        await authProvider.signUp(\r\n          email: _email,\r\n          password: _password,\r\n          name: _name,\r\n          machineSerial: _machineSerial,\r\n        );\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          SnackBar(\r\n            content: Text('Registration successful. Please wait for admin approval.'),\r\n          ),\r\n        );\r\n        Navigator.pop(context);\r\n      } catch (error){\r\n      //   throw the error in the argument of the SnackBar\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          SnackBar(\r\n            content: Text(error.toString()),\r\n          ),\r\n        );\r\n\r\n      }\r\n\r\n\r\n\r\n      setState(() {\r\n        _isLoading = false;\r\n      });\r\n\r\n      /*if (success) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          SnackBar(\r\n            content: Text('Registration successful. Please wait for admin approval.'),\r\n          ),\r\n        );\r\n        Navigator.pop(context);\r\n      } else {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          SnackBar(\r\n            content: Text('Registration failed. Please check your machine serial number and try again.'),\r\n          ),\r\n        );\r\n      }*/\r\n    }\r\n  }\r\n\r\n  Widget _buildTextFormField({\r\n    required String label,\r\n    required IconData icon,\r\n    bool isPassword = false,\r\n    TextInputType keyboardType = TextInputType.text,\r\n    required String? Function(String?) validator,\r\n    required void Function(String?) onSaved,\r\n  }) {\r\n    return TextFormField(\r\n      style: TextStyle(color: Colors.white),\r\n      decoration: InputDecoration(\r\n        labelText: label,\r\n        labelStyle: TextStyle(color: Colors.white70),\r\n        prefixIcon: Icon(icon, color: Colors.white70),\r\n        enabledBorder: OutlineInputBorder(\r\n          borderSide: BorderSide(color: Colors.white38),\r\n          borderRadius: BorderRadius.circular(12),\r\n        ),\r\n        focusedBorder: OutlineInputBorder(\r\n          borderSide: BorderSide(color: Colors.white70),\r\n          borderRadius: BorderRadius.circular(12),\r\n        ),\r\n        suffixIcon: isPassword\r\n            ? IconButton(\r\n          icon: Icon(\r\n            _obscurePassword ? Icons.visibility_off : Icons.visibility,\r\n            color: Colors.white70,\r\n          ),\r\n          onPressed: () {\r\n            setState(() {\r\n              _obscurePassword = !_obscurePassword;\r\n            });\r\n          },\r\n        )\r\n            : null,\r\n      ),\r\n      obscureText: isPassword ? _obscurePassword : false,\r\n      keyboardType: keyboardType,\r\n      validator: validator,\r\n      onSaved: onSaved,\r\n    );\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final theme = Theme.of(context);\r\n    return Scaffold(\r\n      backgroundColor: Colors.black87,\r\n      appBar: AppBar(title: Text('Register')),\r\n      body: Center(\r\n        child: SingleChildScrollView(\r\n          padding: EdgeInsets.symmetric(horizontal: 24.0),\r\n          child: Card(\r\n            color: Colors.grey[850],\r\n            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),\r\n            elevation: 10,\r\n            child: Padding(\r\n              padding: EdgeInsets.all(24.0),\r\n              child: Form(\r\n                key: _formKey,\r\n                child: Column(\r\n                  mainAxisSize: MainAxisSize.min,\r\n                  children: [\r\n                    Text(\r\n                      'Create Account',\r\n                      style: theme.textTheme.headlineSmall?.copyWith(color: Colors.white),\r\n                    ),\r\n                    SizedBox(height: 24),\r\n                    _buildTextFormField(\r\n                      label: 'Name',\r\n                      icon: Icons.person,\r\n                      validator: (value) {\r\n                        if (value == null || value.isEmpty) {\r\n                          return 'Please enter your name';\r\n                        }\r\n                        return null;\r\n                      },\r\n                      onSaved: (value) => _name = value!,\r\n                    ),\r\n                    SizedBox(height: 16),\r\n                    _buildTextFormField(\r\n                      label: 'Email',\r\n                      icon: Icons.email,\r\n                      keyboardType: TextInputType.emailAddress,\r\n                      validator: (value) {\r\n                        if (value == null || value.isEmpty) {\r\n                          return 'Please enter your email';\r\n                        }\r\n                        if (!RegExp(r'\\S+@\\S+\\.\\S+').hasMatch(value)) {\r\n                          return 'Please enter a valid email address';\r\n                        }\r\n                        return null;\r\n                      },\r\n                      onSaved: (value) => _email = value!,\r\n                    ),\r\n                    SizedBox(height: 16),\r\n                    _buildTextFormField(\r\n                      label: 'Password',\r\n                      icon: Icons.lock,\r\n                      isPassword: true,\r\n                      validator: (value) {\r\n                        if (value == null || value.isEmpty) {\r\n                          return 'Please enter your password';\r\n                        }\r\n                        if (value.length < 6) {\r\n                          return 'Password must be at least 6 characters long';\r\n                        }\r\n                        return null;\r\n                      },\r\n                      onSaved: (value) => _password = value!,\r\n                    ),\r\n                    SizedBox(height: 16),\r\n                    _buildTextFormField(\r\n                      label: 'Machine Serial Number',\r\n                      icon: Icons.confirmation_number,\r\n                      validator: (value) {\r\n                        if (value == null || value.isEmpty) {\r\n                          return 'Please enter the machine serial number';\r\n                        }\r\n                        return null;\r\n                      },\r\n                      onSaved: (value) => _machineSerial = value!,\r\n                    ),\r\n                    SizedBox(height: 24),\r\n                    SizedBox(\r\n                      width: double.infinity,\r\n                      child: ElevatedButton(\r\n                        onPressed: _isLoading ? null : _submit,\r\n                        style: ElevatedButton.styleFrom(\r\n                          backgroundColor: Colors.blueAccent,\r\n                          padding: EdgeInsets.symmetric(vertical: 16),\r\n                          shape: RoundedRectangleBorder(\r\n                            borderRadius: BorderRadius.circular(12),\r\n                          ),\r\n                        ),\r\n                        child: _isLoading\r\n                            ? CircularProgressIndicator(color: Colors.white)\r\n                            : Text(\r\n                          'Register',\r\n                          style: TextStyle(fontSize: 16),\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ],\r\n                ),\r\n              ),\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"
        }
    ]
}