{
    "sourceFile": "lib/features/auth/domain/value_objects/password.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734378395682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734378395682,
            "name": "Commit-0",
            "content": "// lib/features/auth/domain/value_objects/password.dart\r\nimport 'package:dartz/dartz.dart';\r\nimport '../../../../core/errors/failures.dart';\r\n\r\nclass Password {\r\n  final Either<Failure, String> value;\r\n\r\n  factory Password(String input) {\r\n    if (input.isEmpty) {\r\n      return Password._(\r\n        left(const Failure.invalidInput('Password cannot be empty')),\r\n      );\r\n    }\r\n\r\n    if (input.length < 6) {\r\n      return Password._(\r\n        left(const Failure.invalidInput('Password must be at least 6 characters')),\r\n      );\r\n    }\r\n\r\n    return Password._(right(input));\r\n  }\r\n\r\n  const Password._(this.value);\r\n\r\n  bool isValid() => value.isRight();\r\n}\r\n\r\n"
        }
    ]
}