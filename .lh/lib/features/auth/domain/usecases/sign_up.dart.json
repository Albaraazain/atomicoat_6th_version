{
    "sourceFile": "lib/features/auth/domain/usecases/sign_up.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734378444082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734378444082,
            "name": "Commit-0",
            "content": "// lib/features/auth/domain/usecases/sign_up.dart\r\nimport 'package:injectable/injectable.dart';\r\nimport 'package:dartz/dartz.dart';\r\nimport '../repositories/i_auth_repository.dart';\r\nimport '../entities/user.dart';\r\nimport '../../../../core/errors/failures.dart';\r\nimport '../value_objects/email.dart';\r\nimport '../value_objects/password.dart';\r\n\r\n@injectable\r\nclass SignUp {\r\n  final IAuthRepository repository;\r\n\r\n  SignUp(this.repository);\r\n\r\n  Future<Either<Failure, User>> call(SignUpParams params) async {\r\n    final emailAddress = EmailAddress(params.email);\r\n    final password = Password(params.password);\r\n\r\n    if (!emailAddress.isValid()) {\r\n      return left(const Failure.invalidInput('Invalid email format'));\r\n    }\r\n\r\n    if (!password.isValid()) {\r\n      return left(const Failure.invalidInput('Invalid password'));\r\n    }\r\n\r\n    if (params.name.isEmpty) {\r\n      return left(const Failure.invalidInput('Name cannot be empty'));\r\n    }\r\n\r\n    if (params.machineSerial.isEmpty) {\r\n      return left(const Failure.invalidInput('Machine serial cannot be empty'));\r\n    }\r\n\r\n    return await repository.signUpWithEmailAndPassword(\r\n      email: emailAddress,\r\n      password: password,\r\n      name: params.name,\r\n      machineSerial: params.machineSerial,\r\n    );\r\n  }\r\n}\r\n\r\nclass SignUpParams {\r\n  final String email;\r\n  final String password;\r\n  final String name;\r\n  final String machineSerial;\r\n\r\n  SignUpParams({\r\n    required this.email,\r\n    required this.password,\r\n    required this.name,\r\n    required this.machineSerial,\r\n  });\r\n}\r\n"
        }
    ]
}