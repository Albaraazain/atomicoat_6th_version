{
    "sourceFile": "lib/shared/widgets/app_drawer.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734376765315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734376765315,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport '../../core/enums/navigation_item.dart';\r\nimport '../../core/enums/user_role.dart';\r\nimport '../../features/auth/providers/auth_provider.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass AppDrawer extends StatelessWidget {\r\n  final Function(NavigationItem) onSelectItem;\r\n  final NavigationItem selectedItem;\r\n\r\n  AppDrawer({\r\n    required this.onSelectItem,\r\n    required this.selectedItem,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final authProvider = Provider.of<AuthProvider>(context);\r\n    final isAdmin = authProvider.userRole == UserRole.admin;\r\n\r\n    return Drawer(\r\n      child: ListView(\r\n        padding: EdgeInsets.zero,\r\n        children: <Widget>[\r\n          DrawerHeader(\r\n            decoration: BoxDecoration(\r\n              color: Theme.of(context).colorScheme.surface,\r\n            ),\r\n            child: Column(\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: [\r\n                Icon(\r\n                  Icons.precision_manufacturing,\r\n                  color: Theme.of(context).iconTheme.color,\r\n                  size: 48,\r\n                ),\r\n                SizedBox(height: 8),\r\n                Text(\r\n                  'ALD System Operations',\r\n                  style: Theme.of(context).textTheme.titleLarge!.copyWith(\r\n                    color: Theme.of(context).colorScheme.onSurface,\r\n                    fontWeight: FontWeight.bold,\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n          _buildDrawerItem(\r\n            context: context,\r\n            icon: Icons.dashboard,\r\n            text: 'Main Dashboard',\r\n            isSelected: selectedItem == NavigationItem.mainDashboard,\r\n            onTap: () => onSelectItem(NavigationItem.mainDashboard),\r\n          ),\r\n          _buildDrawerItem(\r\n            context: context,\r\n            icon: Icons.monitor,\r\n            text: 'System Overview',\r\n            isSelected: selectedItem == NavigationItem.systemOverview,\r\n            onTap: () => onSelectItem(NavigationItem.systemOverview),\r\n          ),\r\n          _buildDrawerItem(\r\n            context: context,\r\n            icon: Icons.book,\r\n            text: 'Recipe Management',\r\n            isSelected: selectedItem == NavigationItem.recipeManagement,\r\n            onTap: () => onSelectItem(NavigationItem.recipeManagement),\r\n          ),\r\n          if (isAdmin)\r\n            _buildDrawerItem(\r\n              context: context,\r\n              icon: Icons.admin_panel_settings,\r\n              text: 'Admin Dashboard',\r\n              isSelected: selectedItem == NavigationItem.adminDashboard,\r\n              onTap: () => onSelectItem(NavigationItem.adminDashboard),\r\n            ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildDrawerItem({\r\n    required BuildContext context,\r\n    required IconData icon,\r\n    required String text,\r\n    required bool isSelected,\r\n    required VoidCallback onTap,\r\n  }) {\r\n    final theme = Theme.of(context);\r\n    return ListTile(\r\n      leading: Icon(\r\n        icon,\r\n        color: isSelected ? theme.colorScheme.secondary : theme.iconTheme.color,\r\n      ),\r\n      title: Text(\r\n        text,\r\n        style: theme.textTheme.bodyLarge!.copyWith(\r\n          color: isSelected ? theme.colorScheme.secondary : theme.textTheme.bodyLarge!.color,\r\n          fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,\r\n        ),\r\n      ),\r\n      selected: isSelected,\r\n      selectedTileColor: theme.colorScheme.surface.withOpacity(0.2),\r\n      onTap: onTap,\r\n    );\r\n  }\r\n}"
        }
    ]
}