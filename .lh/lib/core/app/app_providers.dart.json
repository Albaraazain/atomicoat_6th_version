{
    "sourceFile": "lib/core/app/app_providers.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1734432591806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734432635561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+// lib/core/app/app_providers.dart\r\n+import 'package:experiment_planner/features/components/bloc/component_bloc.dart';\r\n+import 'package:experiment_planner/features/simulation/bloc/simulation_bloc.dart';\r\n+import 'package:experiment_planner/shared/services/navigation_service.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n+import 'package:provider/provider.dart';\r\n+import 'package:provider/single_child_widget.dart';\r\n+\r\n+class AppProviders {\r\n+  static List<BlocProvider> createBlocProviders({\r\n+    required AuthService authService,\r\n+  }) {\r\n+    // Initialize repositories\r\n+    final systemStateRepository = SystemStateRepository();\r\n+    final recipeRepository = RecipeRepository();\r\n+    final componentRepository = ComponentRepository();\r\n+    final alarmRepository = AlarmRepository();\r\n+    final safetyRepository = SafetyRepository(userId: authService.currentUserId);\r\n+\r\n+    // Initialize blocs that need to be available immediately\r\n+    final componentListBloc = ComponentListBloc(componentRepository)\r\n+      ..add(const LoadComponents());\r\n+    final alarmBloc = AlarmBloc(alarmRepository);\r\n+    final systemStateBloc = SystemStateBloc(systemStateRepository);\r\n+    final safetyBloc = SafetyBloc(\r\n+      repository: safetyRepository,\r\n+      authService: authService,\r\n+      alarmBloc: alarmBloc,\r\n+    );\r\n+\r\n+    return [\r\n+      BlocProvider<AlarmBloc>.value(value: alarmBloc),\r\n+      BlocProvider<ComponentBloc>(\r\n+        create: (context) => ComponentBloc(componentRepository),\r\n+      ),\r\n+      BlocProvider<ComponentListBloc>.value(value: componentListBloc),\r\n+      BlocProvider<SafetyBloc>.value(value: safetyBloc),\r\n+      BlocProvider<SystemStateBloc>.value(value: systemStateBloc),\r\n+      BlocProvider<ParameterMonitoringBloc>(\r\n+        create: (context) => ParameterMonitoringBloc(\r\n+          safetyBloc: safetyBloc,\r\n+        ),\r\n+      ),\r\n+      BlocProvider<RecipeBloc>(\r\n+        create: (context) => RecipeBloc(\r\n+          repository: recipeRepository,\r\n+          authService: authService,\r\n+          systemStateBloc: systemStateBloc,\r\n+          alarmBloc: alarmBloc,\r\n+        ),\r\n+      ),\r\n+      BlocProvider<SimulationBloc>(\r\n+        create: (context) => SimulationBloc(\r\n+          componentBloc: context.read<ComponentBloc>(),\r\n+          alarmBloc: alarmBloc,\r\n+          safetyBloc: safetyBloc,\r\n+        ),\r\n+      ),\r\n+    ];\r\n+  }\r\n+\r\n+  static List<SingleChildWidget> createServiceProviders({\r\n+    required NavigationService navigationService,\r\n+    required AuthService authService,\r\n+  }) {\r\n+    return [\r\n+      Provider<NavigationService>.value(value: navigationService),\r\n+      Provider<AuthService>.value(value: authService),\r\n+      ChangeNotifierProvider(create: (_) => AuthProvider(authService)),\r\n+    ];\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1734432642607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n // lib/core/app/app_providers.dart\r\n import 'package:experiment_planner/features/components/bloc/component_bloc.dart';\r\n+import 'package:experiment_planner/features/monitoring/bloc/parameter_monitoring_bloc.dart';\r\n import 'package:experiment_planner/features/recipes/bloc/recipe_bloc.dart';\r\n import 'package:experiment_planner/features/simulation/bloc/simulation_bloc.dart';\r\n import 'package:experiment_planner/shared/services/navigation_service.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n"
                },
                {
                    "date": 1734432653452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,12 @@\n // lib/core/app/app_providers.dart\r\n import 'package:experiment_planner/features/components/bloc/component_bloc.dart';\r\n+import 'package:experiment_planner/features/components/bloc/component_list_bloc.dart';\r\n import 'package:experiment_planner/features/monitoring/bloc/parameter_monitoring_bloc.dart';\r\n import 'package:experiment_planner/features/recipes/bloc/recipe_bloc.dart';\r\n+import 'package:experiment_planner/features/safety/bloc/safety_bloc.dart';\r\n import 'package:experiment_planner/features/simulation/bloc/simulation_bloc.dart';\r\n+import 'package:experiment_planner/features/system/bloc/system_state_bloc.dart';\r\n import 'package:experiment_planner/shared/services/navigation_service.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n import 'package:provider/provider.dart';\r\n import 'package:provider/single_child_widget.dart';\r\n"
                }
            ],
            "date": 1734432591806,
            "name": "Commit-0",
            "content": "// lib/core/app/app_providers.dart\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:provider/single_child_widget.dart';\r\n\r\nclass AppProviders {\r\n  static List<BlocProvider> createBlocProviders({\r\n    required AuthService authService,\r\n  }) {\r\n    // Initialize repositories\r\n    final systemStateRepository = SystemStateRepository();\r\n    final recipeRepository = RecipeRepository();\r\n    final componentRepository = ComponentRepository();\r\n    final alarmRepository = AlarmRepository();\r\n    final safetyRepository = SafetyRepository(userId: authService.currentUserId);\r\n\r\n    // Initialize blocs that need to be available immediately\r\n    final componentListBloc = ComponentListBloc(componentRepository)\r\n      ..add(const LoadComponents());\r\n    final alarmBloc = AlarmBloc(alarmRepository);\r\n    final systemStateBloc = SystemStateBloc(systemStateRepository);\r\n    final safetyBloc = SafetyBloc(\r\n      repository: safetyRepository,\r\n      authService: authService,\r\n      alarmBloc: alarmBloc,\r\n    );\r\n\r\n    return [\r\n      BlocProvider<AlarmBloc>.value(value: alarmBloc),\r\n      BlocProvider<ComponentBloc>(\r\n        create: (context) => ComponentBloc(componentRepository),\r\n      ),\r\n      BlocProvider<ComponentListBloc>.value(value: componentListBloc),\r\n      BlocProvider<SafetyBloc>.value(value: safetyBloc),\r\n      BlocProvider<SystemStateBloc>.value(value: systemStateBloc),\r\n      BlocProvider<ParameterMonitoringBloc>(\r\n        create: (context) => ParameterMonitoringBloc(\r\n          safetyBloc: safetyBloc,\r\n        ),\r\n      ),\r\n      BlocProvider<RecipeBloc>(\r\n        create: (context) => RecipeBloc(\r\n          repository: recipeRepository,\r\n          authService: authService,\r\n          systemStateBloc: systemStateBloc,\r\n          alarmBloc: alarmBloc,\r\n        ),\r\n      ),\r\n      BlocProvider<SimulationBloc>(\r\n        create: (context) => SimulationBloc(\r\n          componentBloc: context.read<ComponentBloc>(),\r\n          alarmBloc: alarmBloc,\r\n          safetyBloc: safetyBloc,\r\n        ),\r\n      ),\r\n    ];\r\n  }\r\n\r\n  static List<SingleChildWidget> createServiceProviders({\r\n    required NavigationService navigationService,\r\n    required AuthService authService,\r\n  }) {\r\n    return [\r\n      Provider<NavigationService>.value(value: navigationService),\r\n      Provider<AuthService>.value(value: authService),\r\n      ChangeNotifierProvider(create: (_) => AuthProvider(authService)),\r\n    ];\r\n  }\r\n}"
        }
    ]
}