{
    "sourceFile": "lib/core/app/app_theme.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1734432735381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734460096214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,31 @@\n-// lib/core/app/app_theme.dart\r\n import 'package:flutter/material.dart';\r\n import 'package:google_fonts/google_fonts.dart';\r\n \r\n class AppTheme {\r\n+  // Tesla-inspired color palette\r\n+  static const Color _primaryDark = Color(0xFF171A20);    // Tesla Black\r\n+  static const Color _secondaryDark = Color(0xFF333333);  // Dark Gray\r\n+  static const Color _accentRed = Color(0xFFE31937);      // Tesla Red\r\n+  static const Color _surfaceDark = Color(0xFF1F2229);    // Dark Surface\r\n+  static const Color _textLight = Color(0xFFF5F5F5);      // Light Text\r\n+  static const Color _textGray = Color(0xFFAAAAAA);       // Gray Text\r\n+\r\n   static ThemeData buildTheme() {\r\n     return ThemeData(\r\n       useMaterial3: true,\r\n       brightness: Brightness.dark,\r\n       colorScheme: const ColorScheme.dark(\r\n-        primary: Color(0xFF2C2C2C),\r\n-        secondary: Color(0xFF4A4A4A),\r\n-        surface: Color(0xFF1E1E1E),\r\n-        onSurface: Colors.white,\r\n+        primary: _primaryDark,\r\n+        secondary: _secondaryDark,\r\n+        surface: _surfaceDark,\r\n+        onSurface: _textLight,\r\n+        error: _accentRed,\r\n+        onError: _textLight,\r\n+        background: _primaryDark,\r\n+        onBackground: _textLight,\r\n       ),\r\n-      scaffoldBackgroundColor: const Color(0xFF121212),\r\n+      scaffoldBackgroundColor: _primaryDark,\r\n       fontFamily: GoogleFonts.roboto().fontFamily,\r\n       textTheme: _buildTextTheme(),\r\n       appBarTheme: _buildAppBarTheme(),\r\n       cardTheme: _buildCardTheme(),\r\n@@ -22,17 +33,185 @@\n       drawerTheme: _buildDrawerTheme(),\r\n       iconTheme: _buildIconTheme(),\r\n       inputDecorationTheme: _buildInputDecorationTheme(),\r\n       dividerTheme: _buildDividerTheme(),\r\n+      snackBarTheme: _buildSnackBarTheme(),\r\n+      dialogTheme: _buildDialogTheme(),\r\n     );\r\n   }\r\n \r\n-  // ... [Keep all your existing theme building methods, just move them here]\r\n-  static TextTheme _buildTextTheme() { /* ... */ }\r\n-  static AppBarTheme _buildAppBarTheme() { /* ... */ }\r\n-  static CardTheme _buildCardTheme() { /* ... */ }\r\n-  static ElevatedButtonThemeData _buildElevatedButtonTheme() { /* ... */ }\r\n-  static DrawerThemeData _buildDrawerTheme() { /* ... */ }\r\n-  static IconThemeData _buildIconTheme() { /* ... */ }\r\n-  static InputDecorationTheme _buildInputDecorationTheme() { /* ... */ }\r\n-  static DividerThemeData _buildDividerTheme() { /* ... */ }\r\n+  static TextTheme _buildTextTheme() {\r\n+    return TextTheme(\r\n+      displayLarge: GoogleFonts.roboto(\r\n+        fontSize: 57,\r\n+        fontWeight: FontWeight.bold,\r\n+        color: _textLight,\r\n+      ),\r\n+      displayMedium: GoogleFonts.roboto(\r\n+        fontSize: 45,\r\n+        fontWeight: FontWeight.bold,\r\n+        color: _textLight,\r\n+      ),\r\n+      displaySmall: GoogleFonts.roboto(\r\n+        fontSize: 36,\r\n+        fontWeight: FontWeight.bold,\r\n+        color: _textLight,\r\n+      ),\r\n+      headlineLarge: GoogleFonts.roboto(\r\n+        fontSize: 32,\r\n+        fontWeight: FontWeight.w600,\r\n+        color: _textLight,\r\n+      ),\r\n+      headlineMedium: GoogleFonts.roboto(\r\n+        fontSize: 28,\r\n+        fontWeight: FontWeight.w600,\r\n+        color: _textLight,\r\n+      ),\r\n+      headlineSmall: GoogleFonts.roboto(\r\n+        fontSize: 24,\r\n+        fontWeight: FontWeight.w600,\r\n+        color: _textLight,\r\n+      ),\r\n+      bodyLarge: GoogleFonts.roboto(\r\n+        fontSize: 16,\r\n+        fontWeight: FontWeight.normal,\r\n+        color: _textLight,\r\n+      ),\r\n+      bodyMedium: GoogleFonts.roboto(\r\n+        fontSize: 14,\r\n+        fontWeight: FontWeight.normal,\r\n+        color: _textGray,\r\n+      ),\r\n+      labelLarge: GoogleFonts.roboto(\r\n+        fontSize: 14,\r\n+        fontWeight: FontWeight.w500,\r\n+        color: _textLight,\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  static AppBarTheme _buildAppBarTheme() {\r\n+    return const AppBarTheme(\r\n+      backgroundColor: _primaryDark,\r\n+      elevation: 0,\r\n+      centerTitle: true,\r\n+      iconTheme: IconThemeData(color: _textLight),\r\n+      titleTextStyle: TextStyle(\r\n+        fontSize: 20,\r\n+        fontWeight: FontWeight.w600,\r\n+        color: _textLight,\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  static CardTheme _buildCardTheme() {\r\n+    return CardTheme(\r\n+      color: _surfaceDark,\r\n+      elevation: 0,\r\n+      shape: RoundedRectangleBorder(\r\n+        borderRadius: BorderRadius.circular(12),\r\n+        side: BorderSide(color: _secondaryDark.withOpacity(0.2), width: 1),\r\n+      ),\r\n+      margin: const EdgeInsets.all(8),\r\n+    );\r\n+  }\r\n+\r\n+  static ElevatedButtonThemeData _buildElevatedButtonTheme() {\r\n+    return ElevatedButtonThemeData(\r\n+      style: ElevatedButton.styleFrom(\r\n+        backgroundColor: _accentRed,\r\n+        foregroundColor: _textLight,\r\n+        elevation: 0,\r\n+        padding: const EdgeInsets.symmetric(\r\n+          horizontal: 24,\r\n+          vertical: 16,\r\n+        ),\r\n+        shape: RoundedRectangleBorder(\r\n+          borderRadius: BorderRadius.circular(8),\r\n+        ),\r\n+        textStyle: const TextStyle(\r\n+          fontSize: 16,\r\n+          fontWeight: FontWeight.w500,\r\n+          letterSpacing: 0.5,\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+  static DrawerThemeData _buildDrawerTheme() {\r\n+    return const DrawerThemeData(\r\n+      backgroundColor: _surfaceDark,\r\n+      elevation: 0,\r\n+      scrimColor: Colors.black54,\r\n+    );\r\n+  }\r\n+\r\n+  static IconThemeData _buildIconTheme() {\r\n+    return const IconThemeData(\r\n+      color: _textLight,\r\n+      size: 24,\r\n+    );\r\n+  }\r\n+\r\n+  static InputDecorationTheme _buildInputDecorationTheme() {\r\n+    return InputDecorationTheme(\r\n+      filled: true,\r\n+      fillColor: _secondaryDark.withOpacity(0.1),\r\n+      contentPadding: const EdgeInsets.symmetric(\r\n+        horizontal: 16,\r\n+        vertical: 16,\r\n+      ),\r\n+      border: OutlineInputBorder(\r\n+        borderRadius: BorderRadius.circular(8),\r\n+        borderSide: BorderSide.none,\r\n+      ),\r\n+      focusedBorder: OutlineInputBorder(\r\n+        borderRadius: BorderRadius.circular(8),\r\n+        borderSide: const BorderSide(color: _accentRed, width: 2),\r\n+      ),\r\n+      errorBorder: OutlineInputBorder(\r\n+        borderRadius: BorderRadius.circular(8),\r\n+        borderSide: const BorderSide(color: _accentRed, width: 1),\r\n+      ),\r\n+      focusedErrorBorder: OutlineInputBorder(\r\n+        borderRadius: BorderRadius.circular(8),\r\n+        borderSide: const BorderSide(color: _accentRed, width: 2),\r\n+      ),\r\n+      labelStyle: TextStyle(color: _textGray),\r\n+      hintStyle: TextStyle(color: _textGray.withOpacity(0.7)),\r\n+    );\r\n+  }\r\n+\r\n+  static DividerThemeData _buildDividerTheme() {\r\n+    return DividerThemeData(\r\n+      color: _secondaryDark.withOpacity(0.2),\r\n+      thickness: 1,\r\n+      space: 24,\r\n+    );\r\n+  }\r\n+\r\n+  static SnackBarThemeData _buildSnackBarTheme() {\r\n+    return SnackBarThemeData(\r\n+      backgroundColor: _surfaceDark,\r\n+      contentTextStyle: const TextStyle(color: _textLight),\r\n+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\r\n+      behavior: SnackBarBehavior.floating,\r\n+    );\r\n+  }\r\n+\r\n+  static DialogTheme _buildDialogTheme() {\r\n+    return DialogTheme(\r\n+      backgroundColor: _surfaceDark,\r\n+      elevation: 0,\r\n+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\r\n+      titleTextStyle: const TextStyle(\r\n+        color: _textLight,\r\n+        fontSize: 20,\r\n+        fontWeight: FontWeight.w600,\r\n+      ),\r\n+      contentTextStyle: const TextStyle(\r\n+        color: _textGray,\r\n+        fontSize: 16,\r\n+      ),\r\n+    );\r\n+  }\r\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1734432735381,
            "name": "Commit-0",
            "content": "// lib/core/app/app_theme.dart\r\nimport 'package:flutter/material.dart';\r\nimport 'package:google_fonts/google_fonts.dart';\r\n\r\nclass AppTheme {\r\n  static ThemeData buildTheme() {\r\n    return ThemeData(\r\n      useMaterial3: true,\r\n      brightness: Brightness.dark,\r\n      colorScheme: const ColorScheme.dark(\r\n        primary: Color(0xFF2C2C2C),\r\n        secondary: Color(0xFF4A4A4A),\r\n        surface: Color(0xFF1E1E1E),\r\n        onSurface: Colors.white,\r\n      ),\r\n      scaffoldBackgroundColor: const Color(0xFF121212),\r\n      fontFamily: GoogleFonts.roboto().fontFamily,\r\n      textTheme: _buildTextTheme(),\r\n      appBarTheme: _buildAppBarTheme(),\r\n      cardTheme: _buildCardTheme(),\r\n      elevatedButtonTheme: _buildElevatedButtonTheme(),\r\n      drawerTheme: _buildDrawerTheme(),\r\n      iconTheme: _buildIconTheme(),\r\n      inputDecorationTheme: _buildInputDecorationTheme(),\r\n      dividerTheme: _buildDividerTheme(),\r\n    );\r\n  }\r\n\r\n  // ... [Keep all your existing theme building methods, just move them here]\r\n  static TextTheme _buildTextTheme() { /* ... */ }\r\n  static AppBarTheme _buildAppBarTheme() { /* ... */ }\r\n  static CardTheme _buildCardTheme() { /* ... */ }\r\n  static ElevatedButtonThemeData _buildElevatedButtonTheme() { /* ... */ }\r\n  static DrawerThemeData _buildDrawerTheme() { /* ... */ }\r\n  static IconThemeData _buildIconTheme() { /* ... */ }\r\n  static InputDecorationTheme _buildInputDecorationTheme() { /* ... */ }\r\n  static DividerThemeData _buildDividerTheme() { /* ... */ }\r\n}"
        }
    ]
}