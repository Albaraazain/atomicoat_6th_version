{
    "sourceFile": "lib/core/initialization/component_initializer.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1734464963232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734465088328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,176 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n+import 'package:flutter/foundation.dart';\r\n import '../../features/components/models/system_component.dart';\r\n \r\n class ComponentInitializer {\r\n   static final List<Map<String, dynamic>> defaultComponents = [\r\n     {\r\n       'id': 'reactor_chamber',\r\n       'name': 'Reactor Chamber',\r\n+      'description': 'Main ALD reaction chamber',\r\n       'type': 'chamber',\r\n-      'parameters': {\r\n-        'temperature': {'min': 0.0, 'max': 300.0, 'unit': '°C'},\r\n-        'pressure': {'min': 0.0, 'max': 10.0, 'unit': 'bar'},\r\n+      'currentValues': {\r\n+        'temperature': 25.0,\r\n+        'pressure': 1.0,\r\n+        'humidity': 45.0\r\n       },\r\n-      'position': {'x': 100.0, 'y': 100.0},\r\n+      'setValues': {\r\n+        'temperature': 200.0,\r\n+        'pressure': 5.0,\r\n+        'humidity': 30.0\r\n+      },\r\n+      'minValues': {\r\n+        'temperature': 15.0,\r\n+        'pressure': 0.1,\r\n+        'humidity': 20.0\r\n+      },\r\n+      'maxValues': {\r\n+        'temperature': 300.0,\r\n+        'pressure': 10.0,\r\n+        'humidity': 60.0\r\n+      },\r\n+      'status': 'normal',\r\n+      'isActivated': true,\r\n+      'errorMessages': [],\r\n+      'position': {'x': 100.0, 'y': 100.0}\r\n     },\r\n     {\r\n-      'id': 'gas_inlet',\r\n-      'name': 'Gas Inlet',\r\n-      'type': 'inlet',\r\n-      'parameters': {\r\n-        'flow_rate': {'min': 0.0, 'max': 100.0, 'unit': 'sccm'},\r\n-        'pressure': {'min': 0.0, 'max': 5.0, 'unit': 'bar'},\r\n+      'id': 'precursor_a',\r\n+      'name': 'Precursor A',\r\n+      'description': 'First precursor inlet system',\r\n+      'type': 'precursor',\r\n+      'currentValues': {\r\n+        'flow_rate': 0.0,\r\n+        'temperature': 25.0,\r\n+        'pressure': 1.0\r\n       },\r\n-      'position': {'x': 300.0, 'y': 100.0},\r\n+      'setValues': {\r\n+        'flow_rate': 20.0,\r\n+        'temperature': 150.0,\r\n+        'pressure': 2.0\r\n+      },\r\n+      'minValues': {\r\n+        'flow_rate': 0.0,\r\n+        'temperature': 10.0,\r\n+        'pressure': 0.1\r\n+      },\r\n+      'maxValues': {\r\n+        'flow_rate': 50.0,\r\n+        'temperature': 200.0,\r\n+        'pressure': 5.0\r\n+      },\r\n+      'status': 'normal',\r\n+      'isActivated': true,\r\n+      'errorMessages': [],\r\n+      'position': {'x': 300.0, 'y': 100.0}\r\n     },\r\n-    // Add more default components\r\n+    {\r\n+      'id': 'precursor_b',\r\n+      'name': 'Precursor B',\r\n+      'description': 'Second precursor inlet system',\r\n+      'type': 'precursor',\r\n+      'currentValues': {\r\n+        'flow_rate': 0.0,\r\n+        'temperature': 25.0,\r\n+        'pressure': 1.0\r\n+      },\r\n+      'setValues': {\r\n+        'flow_rate': 20.0,\r\n+        'temperature': 150.0,\r\n+        'pressure': 2.0\r\n+      },\r\n+      'minValues': {\r\n+        'flow_rate': 0.0,\r\n+        'temperature': 10.0,\r\n+        'pressure': 0.1\r\n+      },\r\n+      'maxValues': {\r\n+        'flow_rate': 50.0,\r\n+        'temperature': 200.0,\r\n+        'pressure': 5.0\r\n+      },\r\n+      'status': 'normal',\r\n+      'isActivated': true,\r\n+      'errorMessages': [],\r\n+      'position': {'x': 500.0, 'y': 100.0}\r\n+    },\r\n+    {\r\n+      'id': 'vacuum_system',\r\n+      'name': 'Vacuum System',\r\n+      'description': 'Vacuum and exhaust system',\r\n+      'type': 'vacuum',\r\n+      'currentValues': {\r\n+        'pressure': 1.0,\r\n+        'pump_speed': 0.0\r\n+      },\r\n+      'setValues': {\r\n+        'pressure': 0.01,\r\n+        'pump_speed': 60.0\r\n+      },\r\n+      'minValues': {\r\n+        'pressure': 0.001,\r\n+        'pump_speed': 0.0\r\n+      },\r\n+      'maxValues': {\r\n+        'pressure': 1.0,\r\n+        'pump_speed': 100.0\r\n+      },\r\n+      'status': 'normal',\r\n+      'isActivated': true,\r\n+      'errorMessages': [],\r\n+      'position': {'x': 100.0, 'y': 300.0}\r\n+    },\r\n+    {\r\n+      'id': 'heater_system',\r\n+      'name': 'Heater System',\r\n+      'description': 'Substrate heating system',\r\n+      'type': 'heater',\r\n+      'currentValues': {\r\n+        'temperature': 25.0,\r\n+        'power': 0.0\r\n+      },\r\n+      'setValues': {\r\n+        'temperature': 200.0,\r\n+        'power': 1000.0\r\n+      },\r\n+      'minValues': {\r\n+        'temperature': 15.0,\r\n+        'power': 0.0\r\n+      },\r\n+      'maxValues': {\r\n+        'temperature': 300.0,\r\n+        'power': 2000.0\r\n+      },\r\n+      'status': 'normal',\r\n+      'isActivated': true,\r\n+      'errorMessages': [],\r\n+      'position': {'x': 300.0, 'y': 300.0}\r\n+    }\r\n   ];\r\n \r\n   static Future<void> initializeSystemComponents() async {\r\n     final firestore = FirebaseFirestore.instance;\r\n+    final batch = firestore.batch();\r\n     final componentsRef = firestore.collection('system_components');\r\n \r\n     // Check if components already exist\r\n     final snapshot = await componentsRef.get();\r\n     if (snapshot.docs.isEmpty) {\r\n       // Initialize default components\r\n       for (final component in defaultComponents) {\r\n-        await componentsRef.doc(component['id']).set(component);\r\n+        final docRef = componentsRef.doc(component['id']);\r\n+        batch.set(docRef, {\r\n+          ...component,\r\n+          'created_at': FieldValue.serverTimestamp(),\r\n+          'updated_at': FieldValue.serverTimestamp(),\r\n+        });\r\n       }\r\n+\r\n+      // Commit the batch\r\n+      await batch.commit();\r\n+      debugPrint('Initialized ${defaultComponents.length} default components');\r\n+    } else {\r\n+      debugPrint('Components already initialized, found ${snapshot.docs.length} existing components');\r\n     }\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1734464963232,
            "name": "Commit-0",
            "content": "import 'package:cloud_firestore/cloud_firestore.dart';\r\nimport '../../features/components/models/system_component.dart';\r\n\r\nclass ComponentInitializer {\r\n  static final List<Map<String, dynamic>> defaultComponents = [\r\n    {\r\n      'id': 'reactor_chamber',\r\n      'name': 'Reactor Chamber',\r\n      'type': 'chamber',\r\n      'parameters': {\r\n        'temperature': {'min': 0.0, 'max': 300.0, 'unit': '°C'},\r\n        'pressure': {'min': 0.0, 'max': 10.0, 'unit': 'bar'},\r\n      },\r\n      'position': {'x': 100.0, 'y': 100.0},\r\n    },\r\n    {\r\n      'id': 'gas_inlet',\r\n      'name': 'Gas Inlet',\r\n      'type': 'inlet',\r\n      'parameters': {\r\n        'flow_rate': {'min': 0.0, 'max': 100.0, 'unit': 'sccm'},\r\n        'pressure': {'min': 0.0, 'max': 5.0, 'unit': 'bar'},\r\n      },\r\n      'position': {'x': 300.0, 'y': 100.0},\r\n    },\r\n    // Add more default components\r\n  ];\r\n\r\n  static Future<void> initializeSystemComponents() async {\r\n    final firestore = FirebaseFirestore.instance;\r\n    final componentsRef = firestore.collection('system_components');\r\n\r\n    // Check if components already exist\r\n    final snapshot = await componentsRef.get();\r\n    if (snapshot.docs.isEmpty) {\r\n      // Initialize default components\r\n      for (final component in defaultComponents) {\r\n        await componentsRef.doc(component['id']).set(component);\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}