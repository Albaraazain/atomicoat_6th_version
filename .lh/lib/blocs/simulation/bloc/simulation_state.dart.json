{
    "sourceFile": "lib/blocs/simulation/bloc/simulation_state.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1734062243575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734062341296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // lib/blocs/simulation/bloc/simulation_state.dart\r\n-import '../../../base/base_bloc_state.dart';\r\n \r\n+import 'package:experiment_planner/blocs/base/base_bloc_state.dart';\r\n+\r\n enum SimulationStatus {\r\n   idle,\r\n   running,\r\n   paused,\r\n"
                },
                {
                    "date": 1734072755649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,29 @@\n // lib/blocs/simulation/bloc/simulation_state.dart\r\n \r\n import 'package:experiment_planner/blocs/base/base_bloc_state.dart';\r\n+import 'package:experiment_planner/blocs/simulation/models/component_simulation_behavior.dart';\r\n+import 'package:experiment_planner/blocs/simulation/models/simulation_config.dart';\r\n \r\n-enum SimulationStatus {\r\n-  idle,\r\n-  running,\r\n-  paused,\r\n-  error\r\n-}\r\n+enum SimulationStatus { idle, running, paused, error }\r\n \r\n class SimulationState extends BaseBlocState {\r\n   final SimulationStatus status;\r\n   final int tickCount;\r\n   final Map<String, DateTime> lastComponentUpdates;\r\n   final Map<String, List<String>> dependencies;\r\n \r\n+  final Map<String, ComponentBehavior> componentBehaviors;\r\n+\r\n   SimulationState({\r\n     required super.isLoading,\r\n     super.error,\r\n     super.lastUpdated,\r\n     required this.status,\r\n     required this.tickCount,\r\n     required this.lastComponentUpdates,\r\n     required this.dependencies,\r\n+    required this.componentBehaviors, // Add this\r\n   });\r\n \r\n   factory SimulationState.initial() {\r\n     return SimulationState(\r\n@@ -34,8 +34,9 @@\n       dependencies: const {\r\n         'MFC': ['Nitrogen Generator'],\r\n         'Pressure Control System': ['Reaction Chamber'],\r\n       },\r\n+      componentBehaviors: SimulationConfig.componentBehaviors, // Add this\r\n     );\r\n   }\r\n \r\n   SimulationState copyWith({\r\n@@ -56,5 +57,5 @@\n       lastComponentUpdates: lastComponentUpdates ?? this.lastComponentUpdates,\r\n       dependencies: dependencies ?? this.dependencies,\r\n     );\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1734072916107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+// lib/blocs/simulation/bloc/simulation_state.dart\r\n+\r\n+import 'package:experiment_planner/blocs/base/base_bloc_state.dart';\r\n+import 'package:experiment_planner/blocs/simulation/models/component_simulation_behavior.dart';\r\n+import 'package:experiment_planner/blocs/simulation/models/simulation_config.dart';\r\n+\r\n+enum SimulationStatus { idle, running, paused, error }\r\n+\r\n+class SimulationState extends BaseBlocState {\r\n+  final SimulationStatus status;\r\n+  final int tickCount;\r\n+  final Map<String, DateTime> lastComponentUpdates;\r\n+  final Map<String, List<String>> dependencies;\r\n+\r\n+  final Map<String, ComponentBehavior> componentBehaviors;\r\n+\r\n+  SimulationState({\r\n+    required super.isLoading,\r\n+    super.error,\r\n+    super.lastUpdated,\r\n+    required this.status,\r\n+    required this.tickCount,\r\n+    required this.lastComponentUpdates,\r\n+    required this.dependencies,\r\n+    required this.componentBehaviors, // Add this\r\n+  });\r\n+\r\n+  factory SimulationState.initial() {\r\n+    return SimulationState(\r\n+      isLoading: false,\r\n+      status: SimulationStatus.idle,\r\n+      tickCount: 0,\r\n+      lastComponentUpdates: const {},\r\n+      dependencies: const {\r\n+        'MFC': ['Nitrogen Generator'],\r\n+        'Pressure Control System': ['Reaction Chamber'],\r\n+      },\r\n+      componentBehaviors: SimulationConfig.componentBehaviors, // Add this\r\n+    );\r\n+  }\r\n+\r\n+  SimulationState copyWith({\r\n+    bool? isLoading,\r\n+    String? error,\r\n+    DateTime? lastUpdated,\r\n+    SimulationStatus? status,\r\n+    int? tickCount,\r\n+    Map<String, DateTime>? lastComponentUpdates,\r\n+    Map<String, List<String>>? dependencies,\r\n+    Map<String, ComponentBehavior>? componentBehaviors,\r\n+  }) {\r\n+    return SimulationState(\r\n+      isLoading: isLoading ?? this.isLoading,\r\n+      error: error ?? this.error,\r\n+      lastUpdated: lastUpdated ?? this.lastUpdated,\r\n+      status: status ?? this.status,\r\n+      tickCount: tickCount ?? this.tickCount,\r\n+      lastComponentUpdates: lastComponentUpdates ?? this.lastComponentUpdates,\r\n+      dependencies: dependencies ?? this.dependencies,\r\n+      componentBehaviors: componentBehaviors ?? this.componentBehaviors,\r\n+    );\r\n+  }\r\n+}\r\n"
                }
            ],
            "date": 1734062243575,
            "name": "Commit-0",
            "content": "// lib/blocs/simulation/bloc/simulation_state.dart\r\nimport '../../../base/base_bloc_state.dart';\r\n\r\nenum SimulationStatus {\r\n  idle,\r\n  running,\r\n  paused,\r\n  error\r\n}\r\n\r\nclass SimulationState extends BaseBlocState {\r\n  final SimulationStatus status;\r\n  final int tickCount;\r\n  final Map<String, DateTime> lastComponentUpdates;\r\n  final Map<String, List<String>> dependencies;\r\n\r\n  SimulationState({\r\n    required super.isLoading,\r\n    super.error,\r\n    super.lastUpdated,\r\n    required this.status,\r\n    required this.tickCount,\r\n    required this.lastComponentUpdates,\r\n    required this.dependencies,\r\n  });\r\n\r\n  factory SimulationState.initial() {\r\n    return SimulationState(\r\n      isLoading: false,\r\n      status: SimulationStatus.idle,\r\n      tickCount: 0,\r\n      lastComponentUpdates: const {},\r\n      dependencies: const {\r\n        'MFC': ['Nitrogen Generator'],\r\n        'Pressure Control System': ['Reaction Chamber'],\r\n      },\r\n    );\r\n  }\r\n\r\n  SimulationState copyWith({\r\n    bool? isLoading,\r\n    String? error,\r\n    DateTime? lastUpdated,\r\n    SimulationStatus? status,\r\n    int? tickCount,\r\n    Map<String, DateTime>? lastComponentUpdates,\r\n    Map<String, List<String>>? dependencies,\r\n  }) {\r\n    return SimulationState(\r\n      isLoading: isLoading ?? this.isLoading,\r\n      error: error ?? this.error,\r\n      lastUpdated: lastUpdated ?? this.lastUpdated,\r\n      status: status ?? this.status,\r\n      tickCount: tickCount ?? this.tickCount,\r\n      lastComponentUpdates: lastComponentUpdates ?? this.lastComponentUpdates,\r\n      dependencies: dependencies ?? this.dependencies,\r\n    );\r\n  }\r\n}"
        }
    ]
}