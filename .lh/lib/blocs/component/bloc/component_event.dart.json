{
    "sourceFile": "lib/blocs/component/bloc/component_event.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1734043291336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734044445986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,65 @@\n   @override\r\n   List<Object?> get props => [];\r\n }\r\n \r\n+// New events to match provider functionality\r\n+class ComponentParameterValueUpdated extends ComponentEvent {\r\n+  final String componentName;\r\n+  final String parameter;\r\n+  final double value;\r\n+\r\n+  const ComponentParameterValueUpdated(\r\n+    this.componentName,\r\n+    this.parameter,\r\n+    this.value,\r\n+  );\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName, parameter, value];\r\n+}\r\n+\r\n+class ComponentDataPointAdded extends ComponentEvent {\r\n+  final String componentName;\r\n+  final String parameter;\r\n+  final DataPoint dataPoint;\r\n+  final int maxDataPoints;\r\n+\r\n+  const ComponentDataPointAdded(\r\n+    this.componentName,\r\n+    this.parameter,\r\n+    this.dataPoint, {\r\n+    this.maxDataPoints = 1000,\r\n+  });\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName, parameter, dataPoint, maxDataPoints];\r\n+}\r\n+\r\n+class ComponentCleared extends ComponentEvent {\r\n+  final String componentName;\r\n+\r\n+  const ComponentCleared(this.componentName);\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName];\r\n+}\r\n+\r\n+class ComponentSetValueUpdated extends ComponentEvent {\r\n+  final String componentName;\r\n+  final String parameter;\r\n+  final double value;\r\n+\r\n+  const ComponentSetValueUpdated(\r\n+    this.componentName,\r\n+    this.parameter,\r\n+    this.value,\r\n+  );\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName, parameter, value];\r\n+}\r\n+\r\n class ComponentInitialized extends ComponentEvent {\r\n   final String componentName;\r\n \r\n   const ComponentInitialized(this.componentName);\r\n"
                },
                {
                    "date": 1734044533642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // lib/blocs/component/bloc/component_event.dart\r\n \r\n import 'package:equatable/equatable.dart';\r\n+import 'package:experiment_planner/modules/system_operation_also_main_module/models/data_point.dart';\r\n import '../../../modules/system_operation_also_main_module/models/system_component.dart';\r\n \r\n abstract class ComponentEvent extends Equatable {\r\n   const ComponentEvent();\r\n@@ -85,18 +86,8 @@\n   @override\r\n   List<Object?> get props => [componentName, currentValues];\r\n }\r\n \r\n-class ComponentSetValueUpdated extends ComponentEvent {\r\n-  final String componentName;\r\n-  final Map<String, double> setValues;\r\n-\r\n-  const ComponentSetValueUpdated(this.componentName, this.setValues);\r\n-\r\n-  @override\r\n-  List<Object?> get props => [componentName, setValues];\r\n-}\r\n-\r\n class ComponentActivationToggled extends ComponentEvent {\r\n   final String componentName;\r\n   final bool isActivated;\r\n \r\n"
                },
                {
                    "date": 1734044780158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,15 +10,53 @@\n   @override\r\n   List<Object?> get props => [];\r\n }\r\n \r\n-// New events to match provider functionality\r\n-class ComponentParameterValueUpdated extends ComponentEvent {\r\n+class ComponentInitialized extends ComponentEvent {\r\n   final String componentName;\r\n+\r\n+  const ComponentInitialized(this.componentName);\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName];\r\n+}\r\n+\r\n+class ComponentCurrentValuesUpdated extends ComponentEvent {\r\n+  final String componentName;\r\n+  final Map<String, double> currentValues;\r\n+\r\n+  const ComponentCurrentValuesUpdated(this.componentName, this.currentValues);\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName, currentValues];\r\n+}\r\n+\r\n+class ComponentSetValuesUpdated extends ComponentEvent {\r\n+  final String componentName;\r\n+  final Map<String, double> setValues;\r\n+\r\n+  const ComponentSetValuesUpdated(this.componentName, this.setValues);\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName, setValues];\r\n+}\r\n+\r\n+class ComponentActivationToggled extends ComponentEvent {\r\n+  final String componentName;\r\n+  final bool isActivated;\r\n+\r\n+  const ComponentActivationToggled(this.componentName, this.isActivated);\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName, isActivated];\r\n+}\r\n+\r\n+class ComponentParameterUpdated extends ComponentEvent {\r\n+  final String componentName;\r\n   final String parameter;\r\n   final double value;\r\n \r\n-  const ComponentParameterValueUpdated(\r\n+  const ComponentParameterUpdated(\r\n     this.componentName,\r\n     this.parameter,\r\n     this.value,\r\n   );\r\n@@ -43,8 +81,25 @@\n   @override\r\n   List<Object?> get props => [componentName, parameter, dataPoint, maxDataPoints];\r\n }\r\n \r\n+// New events to match provider functionality\r\n+class ComponentParameterValueUpdated extends ComponentEvent {\r\n+  final String componentName;\r\n+  final String parameter;\r\n+  final double value;\r\n+\r\n+  const ComponentParameterValueUpdated(\r\n+    this.componentName,\r\n+    this.parameter,\r\n+    this.value,\r\n+  );\r\n+\r\n+  @override\r\n+  List<Object?> get props => [componentName, parameter, value];\r\n+}\r\n+\r\n+\r\n class ComponentCleared extends ComponentEvent {\r\n   final String componentName;\r\n \r\n   const ComponentCleared(this.componentName);\r\n@@ -67,17 +122,9 @@\n   @override\r\n   List<Object?> get props => [componentName, parameter, value];\r\n }\r\n \r\n-class ComponentInitialized extends ComponentEvent {\r\n-  final String componentName;\r\n \r\n-  const ComponentInitialized(this.componentName);\r\n-\r\n-  @override\r\n-  List<Object?> get props => [componentName];\r\n-}\r\n-\r\n class ComponentValueUpdated extends ComponentEvent {\r\n   final String componentName;\r\n   final Map<String, double> currentValues;\r\n \r\n@@ -86,18 +133,8 @@\n   @override\r\n   List<Object?> get props => [componentName, currentValues];\r\n }\r\n \r\n-class ComponentActivationToggled extends ComponentEvent {\r\n-  final String componentName;\r\n-  final bool isActivated;\r\n-\r\n-  const ComponentActivationToggled(this.componentName, this.isActivated);\r\n-\r\n-  @override\r\n-  List<Object?> get props => [componentName, isActivated];\r\n-}\r\n-\r\n class ComponentErrorAdded extends ComponentEvent {\r\n   final String componentName;\r\n   final String errorMessage;\r\n \r\n@@ -115,8 +152,9 @@\n   @override\r\n   List<Object?> get props => [componentName];\r\n }\r\n \r\n+\r\n class ComponentStatusUpdated extends ComponentEvent {\r\n   final String componentName;\r\n   final ComponentStatus status;\r\n \r\n"
                },
                {
                    "date": 1734070480412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,10 @@\n     this.maxDataPoints = 1000,\r\n   });\r\n \r\n   @override\r\n-  List<Object?> get props => [componentName, parameter, dataPoint, maxDataPoints];\r\n+  List<Object?> get props =>\r\n+      [componentName, parameter, dataPoint, maxDataPoints];\r\n }\r\n \r\n // New events to match provider functionality\r\n class ComponentParameterValueUpdated extends ComponentEvent {\r\n@@ -97,9 +98,8 @@\n   @override\r\n   List<Object?> get props => [componentName, parameter, value];\r\n }\r\n \r\n-\r\n class ComponentCleared extends ComponentEvent {\r\n   final String componentName;\r\n \r\n   const ComponentCleared(this.componentName);\r\n@@ -111,20 +111,20 @@\n class ComponentSetValueUpdated extends ComponentEvent {\r\n   final String componentName;\r\n   final String parameter;\r\n   final double value;\r\n+  final Map<String, double> setValues; // Add this field\r\n \r\n   const ComponentSetValueUpdated(\r\n     this.componentName,\r\n     this.parameter,\r\n     this.value,\r\n-  );\r\n+  ) : setValues = {parameter: value};\r\n \r\n   @override\r\n-  List<Object?> get props => [componentName, parameter, value];\r\n+  List<Object?> get props => [componentName, parameter, value, setValues];\r\n }\r\n \r\n-\r\n class ComponentValueUpdated extends ComponentEvent {\r\n   final String componentName;\r\n   final Map<String, double> currentValues;\r\n \r\n@@ -152,9 +152,8 @@\n   @override\r\n   List<Object?> get props => [componentName];\r\n }\r\n \r\n-\r\n class ComponentStatusUpdated extends ComponentEvent {\r\n   final String componentName;\r\n   final ComponentStatus status;\r\n \r\n@@ -178,12 +177,13 @@\n   final String componentName;\r\n   final Map<String, double>? minValues;\r\n   final Map<String, double>? maxValues;\r\n \r\n-  const ComponentLimitsUpdated(this.componentName, {\r\n+  const ComponentLimitsUpdated(\r\n+    this.componentName, {\r\n     this.minValues,\r\n     this.maxValues,\r\n   });\r\n \r\n   @override\r\n\\ No newline at end of file\n   List<Object?> get props => [componentName, minValues, maxValues];\r\n-}\n+}\r\n"
                },
                {
                    "date": 1734070552667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,15 +68,16 @@\n class ComponentDataPointAdded extends ComponentEvent {\r\n   final String componentName;\r\n   final String parameter;\r\n   final DataPoint dataPoint;\r\n+  static const int defaultMaxPoints = 1000;\r\n   final int maxDataPoints;\r\n \r\n   const ComponentDataPointAdded(\r\n     this.componentName,\r\n     this.parameter,\r\n     this.dataPoint, {\r\n-    this.maxDataPoints = 1000,\r\n+    this.maxDataPoints = defaultMaxPoints,\r\n   });\r\n \r\n   @override\r\n   List<Object?> get props =>\r\n"
                },
                {
                    "date": 1734070689830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,16 +68,15 @@\n class ComponentDataPointAdded extends ComponentEvent {\r\n   final String componentName;\r\n   final String parameter;\r\n   final DataPoint dataPoint;\r\n-  static const int defaultMaxPoints = 1000;\r\n   final int maxDataPoints;\r\n \r\n   const ComponentDataPointAdded(\r\n     this.componentName,\r\n     this.parameter,\r\n     this.dataPoint, {\r\n-    this.maxDataPoints = defaultMaxPoints,\r\n+    this.maxDataPoints = 1000,\r\n   });\r\n \r\n   @override\r\n   List<Object?> get props =>\r\n@@ -114,13 +113,13 @@\n   final String parameter;\r\n   final double value;\r\n   final Map<String, double> setValues; // Add this field\r\n \r\n-  const ComponentSetValueUpdated(\r\n+  ComponentSetValueUpdated(\r\n     this.componentName,\r\n     this.parameter,\r\n     this.value,\r\n-  ) : setValues = {parameter: value};\r\n+  ) : setValues = <String, double>{parameter: value};\r\n \r\n   @override\r\n   List<Object?> get props => [componentName, parameter, value, setValues];\r\n }\r\n@@ -186,5 +185,5 @@\n   });\r\n \r\n   @override\r\n   List<Object?> get props => [componentName, minValues, maxValues];\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1734070801051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n // lib/blocs/component/bloc/component_event.dart\r\n \r\n import 'package:equatable/equatable.dart';\r\n-import 'package:experiment_planner/modules/system_operation_also_main_module/models/data_point.dart';\r\n+import '../../../modules/system_operation_also_main_module/models/data_point.dart';\r\n import '../../../modules/system_operation_also_main_module/models/system_component.dart';\r\n \r\n abstract class ComponentEvent extends Equatable {\r\n   const ComponentEvent();\r\n"
                },
                {
                    "date": 1734143477354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,4 +186,12 @@\n \r\n   @override\r\n   List<Object?> get props => [componentName, minValues, maxValues];\r\n }\r\n+\r\n+class LoadComponents extends ComponentEvent {\r\n+  final String? userId;\r\n+  const LoadComponents({this.userId});\r\n+\r\n+  @override\r\n+  List<Object> get props => [userId ?? ''];\r\n+}\r\n"
                }
            ],
            "date": 1734043291336,
            "name": "Commit-0",
            "content": "// lib/blocs/component/bloc/component_event.dart\r\n\r\nimport 'package:equatable/equatable.dart';\r\nimport '../../../modules/system_operation_also_main_module/models/system_component.dart';\r\n\r\nabstract class ComponentEvent extends Equatable {\r\n  const ComponentEvent();\r\n\r\n  @override\r\n  List<Object?> get props => [];\r\n}\r\n\r\nclass ComponentInitialized extends ComponentEvent {\r\n  final String componentName;\r\n\r\n  const ComponentInitialized(this.componentName);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName];\r\n}\r\n\r\nclass ComponentValueUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final Map<String, double> currentValues;\r\n\r\n  const ComponentValueUpdated(this.componentName, this.currentValues);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, currentValues];\r\n}\r\n\r\nclass ComponentSetValueUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final Map<String, double> setValues;\r\n\r\n  const ComponentSetValueUpdated(this.componentName, this.setValues);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, setValues];\r\n}\r\n\r\nclass ComponentActivationToggled extends ComponentEvent {\r\n  final String componentName;\r\n  final bool isActivated;\r\n\r\n  const ComponentActivationToggled(this.componentName, this.isActivated);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, isActivated];\r\n}\r\n\r\nclass ComponentErrorAdded extends ComponentEvent {\r\n  final String componentName;\r\n  final String errorMessage;\r\n\r\n  const ComponentErrorAdded(this.componentName, this.errorMessage);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, errorMessage];\r\n}\r\n\r\nclass ComponentErrorsCleared extends ComponentEvent {\r\n  final String componentName;\r\n\r\n  const ComponentErrorsCleared(this.componentName);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName];\r\n}\r\n\r\nclass ComponentStatusUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final ComponentStatus status;\r\n\r\n  const ComponentStatusUpdated(this.componentName, this.status);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, status];\r\n}\r\n\r\nclass ComponentCheckDateUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final DateTime checkDate;\r\n\r\n  const ComponentCheckDateUpdated(this.componentName, this.checkDate);\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, checkDate];\r\n}\r\n\r\nclass ComponentLimitsUpdated extends ComponentEvent {\r\n  final String componentName;\r\n  final Map<String, double>? minValues;\r\n  final Map<String, double>? maxValues;\r\n\r\n  const ComponentLimitsUpdated(this.componentName, {\r\n    this.minValues,\r\n    this.maxValues,\r\n  });\r\n\r\n  @override\r\n  List<Object?> get props => [componentName, minValues, maxValues];\r\n}"
        }
    ]
}