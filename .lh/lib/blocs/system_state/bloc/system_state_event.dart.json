{
    "sourceFile": "lib/blocs/system_state/bloc/system_state_event.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1734046631427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734046916532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,35 @@\n // lib/blocs/system_state/bloc/system_state_event.dart\r\n \r\n import '../../base/base_bloc_event.dart';\r\n \r\n-abstract class SystemStateEvent extends BaseBlocEvent {\r\n-  const SystemStateEvent();\r\n-}\r\n+abstract class SystemStateEvent extends BaseBlocEvent {}\r\n \r\n-class InitializeSystem extends SystemStateEvent {\r\n-  const InitializeSystem();\r\n-}\r\n+class InitializeSystem extends SystemStateEvent {}\r\n \r\n-class StartSystem extends SystemStateEvent {\r\n-  const StartSystem();\r\n-}\r\n+class StartSystem extends SystemStateEvent {}\r\n \r\n-class StopSystem extends SystemStateEvent {\r\n-  const StopSystem();\r\n-}\r\n+class StopSystem extends SystemStateEvent {}\r\n \r\n-class EmergencyStop extends SystemStateEvent {\r\n-  const EmergencyStop();\r\n-}\r\n+class EmergencyStop extends SystemStateEvent {}\r\n \r\n-class CheckSystemReadiness extends SystemStateEvent {\r\n-  const CheckSystemReadiness();\r\n-}\r\n+class CheckSystemReadiness extends SystemStateEvent {}\r\n \r\n class SaveSystemState extends SystemStateEvent {\r\n   final Map<String, dynamic> state;\r\n \r\n-  const SaveSystemState(this.state);\r\n+  SaveSystemState(this.state);\r\n \r\n   @override\r\n   List<Object?> get props => [...super.props, state];\r\n }\r\n \r\n-class ValidateSystemState extends SystemStateEvent {\r\n-  const ValidateSystemState();\r\n-}\r\n+class ValidateSystemState extends SystemStateEvent {}\r\n \r\n class UpdateSystemParameters extends SystemStateEvent {\r\n   final Map<String, Map<String, double>> updates;\r\n \r\n-  const UpdateSystemParameters(this.updates);\r\n+  UpdateSystemParameters(this.updates);\r\n \r\n   @override\r\n   List<Object?> get props => [...super.props, updates];\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1734046938876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+// lib/blocs/system_state/bloc/system_state_state.dart\r\n+\r\n+import '../../base/base_bloc_state.dart';\r\n+\r\n+enum SystemOperationalStatus {\r\n+  uninitialized,\r\n+  initializing,\r\n+  ready,\r\n+  running,\r\n+  stopped,\r\n+  error,\r\n+  emergencyStopped\r\n+}\r\n+\r\n+class SystemStateState extends BaseBlocState {\r\n+  final SystemOperationalStatus status;\r\n+  final bool isSystemRunning;\r\n+  final List<String> systemIssues;\r\n+  final Map<String, dynamic> currentSystemState;\r\n+  final DateTime? lastStateUpdate;\r\n+  final bool isReadinessCheckPassed;\r\n+\r\n+  SystemStateState({\r\n+    this.status = SystemOperationalStatus.uninitialized,\r\n+    this.isSystemRunning = false,\r\n+    this.systemIssues = const [],\r\n+    this.currentSystemState = const {},\r\n+    this.lastStateUpdate,\r\n+    this.isReadinessCheckPassed = false,\r\n+    bool isLoading = false,\r\n+    String? error,\r\n+    DateTime? lastUpdated,\r\n+  }) : super(\r\n+          isLoading: isLoading,\r\n+          error: error,\r\n+          lastUpdated: lastUpdated,\r\n+        );\r\n+\r\n+  SystemStateState copyWith({\r\n+    SystemOperationalStatus? status,\r\n+    bool? isSystemRunning,\r\n+    List<String>? systemIssues,\r\n+    Map<String, dynamic>? currentSystemState,\r\n+    DateTime? lastStateUpdate,\r\n+    bool? isReadinessCheckPassed,\r\n+    bool? isLoading,\r\n+    String? error,\r\n+  }) {\r\n+    return SystemStateState(\r\n+      status: status ?? this.status,\r\n+      isSystemRunning: isSystemRunning ?? this.isSystemRunning,\r\n+      systemIssues: systemIssues ?? this.systemIssues,\r\n+      currentSystemState: currentSystemState ?? this.currentSystemState,\r\n+      lastStateUpdate: lastStateUpdate ?? this.lastStateUpdate,\r\n+      isReadinessCheckPassed: isReadinessCheckPassed ?? this.isReadinessCheckPassed,\r\n+      isLoading: isLoading ?? this.isLoading,\r\n+      error: error ?? this.error,\r\n+    );\r\n+  }\r\n+\r\n+  @override\r\n+  List<Object?> get props => [\r\n+    ...super.props,\r\n+    status,\r\n+    isSystemRunning,\r\n+    systemIssues,\r\n+    currentSystemState,\r\n+    lastStateUpdate,\r\n+    isReadinessCheckPassed,\r\n+  ];\r\n+\r\n+  bool get isReady => status == SystemOperationalStatus.ready;\r\n+  bool get canStart => isReady && !isSystemRunning && systemIssues.isEmpty;\r\n+  bool get canStop => isSystemRunning;\r\n+  bool get isError => status == SystemOperationalStatus.error;\r\n+  bool get isEmergencyStopped => status == SystemOperationalStatus.emergencyStopped;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1734046947387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,77 +1,35 @@\n-// lib/blocs/system_state/bloc/system_state_state.dart\r\n+// lib/blocs/system_state/bloc/system_state_event.dart\r\n \r\n-import '../../base/base_bloc_state.dart';\r\n+import '../../base/base_bloc_event.dart';\r\n \r\n-enum SystemOperationalStatus {\r\n-  uninitialized,\r\n-  initializing,\r\n-  ready,\r\n-  running,\r\n-  stopped,\r\n-  error,\r\n-  emergencyStopped\r\n+abstract class SystemStateEvent extends BaseBlocEvent {}\r\n+\r\n+class InitializeSystem extends SystemStateEvent {}\r\n+\r\n+class StartSystem extends SystemStateEvent {}\r\n+\r\n+class StopSystem extends SystemStateEvent {}\r\n+\r\n+class EmergencyStop extends SystemStateEvent {}\r\n+\r\n+class CheckSystemReadiness extends SystemStateEvent {}\r\n+\r\n+class SaveSystemState extends SystemStateEvent {\r\n+  final Map<String, dynamic> state;\r\n+\r\n+  SaveSystemState(this.state);\r\n+\r\n+  @override\r\n+  List<Object?> get props => [...super.props, state];\r\n }\r\n \r\n-class SystemStateState extends BaseBlocState {\r\n-  final SystemOperationalStatus status;\r\n-  final bool isSystemRunning;\r\n-  final List<String> systemIssues;\r\n-  final Map<String, dynamic> currentSystemState;\r\n-  final DateTime? lastStateUpdate;\r\n-  final bool isReadinessCheckPassed;\r\n+class ValidateSystemState extends SystemStateEvent {}\r\n \r\n-  SystemStateState({\r\n-    this.status = SystemOperationalStatus.uninitialized,\r\n-    this.isSystemRunning = false,\r\n-    this.systemIssues = const [],\r\n-    this.currentSystemState = const {},\r\n-    this.lastStateUpdate,\r\n-    this.isReadinessCheckPassed = false,\r\n-    bool isLoading = false,\r\n-    String? error,\r\n-    DateTime? lastUpdated,\r\n-  }) : super(\r\n-          isLoading: isLoading,\r\n-          error: error,\r\n-          lastUpdated: lastUpdated,\r\n-        );\r\n+class UpdateSystemParameters extends SystemStateEvent {\r\n+  final Map<String, Map<String, double>> updates;\r\n \r\n-  SystemStateState copyWith({\r\n-    SystemOperationalStatus? status,\r\n-    bool? isSystemRunning,\r\n-    List<String>? systemIssues,\r\n-    Map<String, dynamic>? currentSystemState,\r\n-    DateTime? lastStateUpdate,\r\n-    bool? isReadinessCheckPassed,\r\n-    bool? isLoading,\r\n-    String? error,\r\n-  }) {\r\n-    return SystemStateState(\r\n-      status: status ?? this.status,\r\n-      isSystemRunning: isSystemRunning ?? this.isSystemRunning,\r\n-      systemIssues: systemIssues ?? this.systemIssues,\r\n-      currentSystemState: currentSystemState ?? this.currentSystemState,\r\n-      lastStateUpdate: lastStateUpdate ?? this.lastStateUpdate,\r\n-      isReadinessCheckPassed: isReadinessCheckPassed ?? this.isReadinessCheckPassed,\r\n-      isLoading: isLoading ?? this.isLoading,\r\n-      error: error ?? this.error,\r\n-    );\r\n-  }\r\n+  UpdateSystemParameters(this.updates);\r\n \r\n   @override\r\n-  List<Object?> get props => [\r\n-    ...super.props,\r\n-    status,\r\n-    isSystemRunning,\r\n-    systemIssues,\r\n-    currentSystemState,\r\n-    lastStateUpdate,\r\n-    isReadinessCheckPassed,\r\n-  ];\r\n-\r\n-  bool get isReady => status == SystemOperationalStatus.ready;\r\n-  bool get canStart => isReady && !isSystemRunning && systemIssues.isEmpty;\r\n-  bool get canStop => isSystemRunning;\r\n-  bool get isError => status == SystemOperationalStatus.error;\r\n-  bool get isEmergencyStopped => status == SystemOperationalStatus.emergencyStopped;\r\n+  List<Object?> get props => [...super.props, updates];\r\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1734046631427,
            "name": "Commit-0",
            "content": "// lib/blocs/system_state/bloc/system_state_event.dart\r\n\r\nimport '../../base/base_bloc_event.dart';\r\n\r\nabstract class SystemStateEvent extends BaseBlocEvent {\r\n  const SystemStateEvent();\r\n}\r\n\r\nclass InitializeSystem extends SystemStateEvent {\r\n  const InitializeSystem();\r\n}\r\n\r\nclass StartSystem extends SystemStateEvent {\r\n  const StartSystem();\r\n}\r\n\r\nclass StopSystem extends SystemStateEvent {\r\n  const StopSystem();\r\n}\r\n\r\nclass EmergencyStop extends SystemStateEvent {\r\n  const EmergencyStop();\r\n}\r\n\r\nclass CheckSystemReadiness extends SystemStateEvent {\r\n  const CheckSystemReadiness();\r\n}\r\n\r\nclass SaveSystemState extends SystemStateEvent {\r\n  final Map<String, dynamic> state;\r\n\r\n  const SaveSystemState(this.state);\r\n\r\n  @override\r\n  List<Object?> get props => [...super.props, state];\r\n}\r\n\r\nclass ValidateSystemState extends SystemStateEvent {\r\n  const ValidateSystemState();\r\n}\r\n\r\nclass UpdateSystemParameters extends SystemStateEvent {\r\n  final Map<String, Map<String, double>> updates;\r\n\r\n  const UpdateSystemParameters(this.updates);\r\n\r\n  @override\r\n  List<Object?> get props => [...super.props, updates];\r\n}"
        }
    ]
}