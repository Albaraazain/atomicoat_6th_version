{
    "sourceFile": "lib/modules/system_operation_also_main_module/screens/system_overview_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1730749588035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730749671779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,10 @@\n import '../widgets/recipe_control.dart';\r\n \r\n class SystemReadinessIndicator extends StatefulWidget {\r\n   @override\r\n-  _SystemReadinessIndicatorState createState() => _SystemReadinessIndicatorState();\r\n+  _SystemReadinessIndicatorState createState() =>\r\n+      _SystemReadinessIndicatorState();\r\n }\r\n \r\n class _SystemReadinessIndicatorState extends State<SystemReadinessIndicator> {\r\n   bool _isExpanded = false;\r\n@@ -47,15 +48,18 @@\n               mainAxisSize: MainAxisSize.min,\r\n               children: [\r\n                 // Compact header always visible\r\n                 Container(\r\n-                  color: isReady ? Colors.green.withOpacity(0.9) : Colors.red.withOpacity(0.9),\r\n+                  color: isReady\r\n+                      ? Colors.green.withOpacity(0.9)\r\n+                      : Colors.red.withOpacity(0.9),\r\n                   child: SafeArea(\r\n                     top: false,\r\n                     child: InkWell(\r\n                       onTap: () => setState(() => _isExpanded = !_isExpanded),\r\n                       child: Padding(\r\n-                        padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n+                        padding:\r\n+                            EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n                         child: Row(\r\n                           children: [\r\n                             Icon(\r\n                               isReady ? Icons.check_circle : Icons.warning,\r\n@@ -71,9 +75,11 @@\n                               ),\r\n                             ),\r\n                             Spacer(),\r\n                             Icon(\r\n-                              _isExpanded ? Icons.expand_more : Icons.expand_less,\r\n+                              _isExpanded\r\n+                                  ? Icons.expand_more\r\n+                                  : Icons.expand_less,\r\n                               color: Colors.white,\r\n                             ),\r\n                           ],\r\n                         ),\r\n@@ -84,9 +90,10 @@\n                 // Expandable issues list\r\n                 if (_isExpanded && !isReady)\r\n                   Container(\r\n                     color: Colors.black87,\r\n-                    constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.4),\r\n+                    constraints: BoxConstraints(\r\n+                        maxHeight: MediaQuery.of(context).size.height * 0.4),\r\n                     child: SingleChildScrollView(\r\n                       child: SafeArea(\r\n                         top: false,\r\n                         child: Padding(\r\n@@ -102,30 +109,31 @@\n                                 ),\r\n                               ),\r\n                               SizedBox(height: 8),\r\n                               ...issues.map((issue) => Padding(\r\n-                                padding: EdgeInsets.only(bottom: 8),\r\n-                                child: Row(\r\n-                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n-                                  children: [\r\n-                                    Icon(\r\n-                                      Icons.error_outline,\r\n-                                      color: Colors.red,\r\n-                                      size: 16,\r\n-                                    ),\r\n-                                    SizedBox(width: 8),\r\n-                                    Expanded(\r\n-                                      child: Text(\r\n-                                        issue,\r\n-                                        style: TextStyle(\r\n-                                          color: Colors.white,\r\n-                                          fontSize: 12,\r\n+                                    padding: EdgeInsets.only(bottom: 8),\r\n+                                    child: Row(\r\n+                                      crossAxisAlignment:\r\n+                                          CrossAxisAlignment.start,\r\n+                                      children: [\r\n+                                        Icon(\r\n+                                          Icons.error_outline,\r\n+                                          color: Colors.red,\r\n+                                          size: 16,\r\n                                         ),\r\n-                                      ),\r\n+                                        SizedBox(width: 8),\r\n+                                        Expanded(\r\n+                                          child: Text(\r\n+                                            issue,\r\n+                                            style: TextStyle(\r\n+                                              color: Colors.white,\r\n+                                              fontSize: 12,\r\n+                                            ),\r\n+                                          ),\r\n+                                        ),\r\n+                                      ],\r\n                                     ),\r\n-                                  ],\r\n-                                ),\r\n-                              )),\r\n+                                  )),\r\n                             ],\r\n                           ),\r\n                         ),\r\n                       ),\r\n@@ -163,9 +171,10 @@\n           SizedBox(height: 8),\r\n           if (issues.isEmpty)\r\n             Text('No issues detected', style: TextStyle(color: Colors.green))\r\n           else\r\n-            ...issues.map((issue) => Text('• $issue', style: TextStyle(color: Colors.white))),\r\n+            ...issues.map((issue) =>\r\n+                Text('• $issue', style: TextStyle(color: Colors.white))),\r\n         ],\r\n       ),\r\n     );\r\n   }\r\n@@ -290,16 +299,12 @@\n                     ),\r\n                   ),\r\n                 ),\r\n               // Add the new SystemReadinessIndicator\r\n-              Positioned(\r\n-                top: 60,\r\n-                left: 10,\r\n-                child: SystemReadinessIndicator(),\r\n-              ),\r\n+              SystemReadinessIndicator(),\r\n             ],\r\n           );\r\n         },\r\n       ),\r\n     );\r\n   }\r\n\\ No newline at end of file\n-}\n+}\r\n"
                },
                {
                    "date": 1730751553133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,9 @@\n import '../widgets/recipe_control.dart';\r\n \r\n class SystemReadinessIndicator extends StatefulWidget {\r\n   @override\r\n-  _SystemReadinessIndicatorState createState() =>\r\n-      _SystemReadinessIndicatorState();\r\n+  _SystemReadinessIndicatorState createState() => _SystemReadinessIndicatorState();\r\n }\r\n \r\n class _SystemReadinessIndicatorState extends State<SystemReadinessIndicator> {\r\n   bool _isExpanded = false;\r\n@@ -25,12 +24,49 @@\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Consumer<SystemStateProvider>(\r\n       builder: (context, systemProvider, child) {\r\n+        // First check if system is running\r\n+        if (systemProvider.isSystemRunning) {\r\n+          return AnimatedPositioned(\r\n+            duration: Duration(milliseconds: 300),\r\n+            curve: Curves.easeInOut,\r\n+            left: 0,\r\n+            right: 0,\r\n+            bottom: 0,\r\n+            child: Container(\r\n+              color: Colors.green.withOpacity(0.9),\r\n+              child: SafeArea(\r\n+                top: false,\r\n+                child: Padding(\r\n+                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n+                  child: Row(\r\n+                    children: [\r\n+                      Icon(\r\n+                        Icons.play_circle,\r\n+                        color: Colors.white,\r\n+                        size: 20,\r\n+                      ),\r\n+                      SizedBox(width: 8),\r\n+                      Text(\r\n+                        'System Running${systemProvider.activeRecipe != null ? ': ${systemProvider.activeRecipe!.name}' : ''}',\r\n+                        style: TextStyle(\r\n+                          color: Colors.white,\r\n+                          fontWeight: FontWeight.bold,\r\n+                        ),\r\n+                      ),\r\n+                    ],\r\n+                  ),\r\n+                ),\r\n+              ),\r\n+            ),\r\n+          );\r\n+        }\r\n+\r\n+        // If not running, show regular readiness status\r\n         final issues = systemProvider.getSystemIssues();\r\n         final isReady = issues.isEmpty;\r\n \r\n-        // Compact notification that slides up from bottom\r\n         return AnimatedPositioned(\r\n           duration: Duration(milliseconds: 300),\r\n           curve: Curves.easeInOut,\r\n           left: 0,\r\n@@ -46,20 +82,16 @@\n             },\r\n             child: Column(\r\n               mainAxisSize: MainAxisSize.min,\r\n               children: [\r\n-                // Compact header always visible\r\n                 Container(\r\n-                  color: isReady\r\n-                      ? Colors.green.withOpacity(0.9)\r\n-                      : Colors.red.withOpacity(0.9),\r\n+                  color: isReady ? Colors.green.withOpacity(0.9) : Colors.red.withOpacity(0.9),\r\n                   child: SafeArea(\r\n                     top: false,\r\n                     child: InkWell(\r\n                       onTap: () => setState(() => _isExpanded = !_isExpanded),\r\n                       child: Padding(\r\n-                        padding:\r\n-                            EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n+                        padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n                         child: Row(\r\n                           children: [\r\n                             Icon(\r\n                               isReady ? Icons.check_circle : Icons.warning,\r\n@@ -75,25 +107,21 @@\n                               ),\r\n                             ),\r\n                             Spacer(),\r\n                             Icon(\r\n-                              _isExpanded\r\n-                                  ? Icons.expand_more\r\n-                                  : Icons.expand_less,\r\n+                              _isExpanded ? Icons.expand_more : Icons.expand_less,\r\n                               color: Colors.white,\r\n                             ),\r\n                           ],\r\n                         ),\r\n                       ),\r\n                     ),\r\n                   ),\r\n                 ),\r\n-                // Expandable issues list\r\n                 if (_isExpanded && !isReady)\r\n                   Container(\r\n                     color: Colors.black87,\r\n-                    constraints: BoxConstraints(\r\n-                        maxHeight: MediaQuery.of(context).size.height * 0.4),\r\n+                    constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.4),\r\n                     child: SingleChildScrollView(\r\n                       child: SafeArea(\r\n                         top: false,\r\n                         child: Padding(\r\n@@ -109,31 +137,30 @@\n                                 ),\r\n                               ),\r\n                               SizedBox(height: 8),\r\n                               ...issues.map((issue) => Padding(\r\n-                                    padding: EdgeInsets.only(bottom: 8),\r\n-                                    child: Row(\r\n-                                      crossAxisAlignment:\r\n-                                          CrossAxisAlignment.start,\r\n-                                      children: [\r\n-                                        Icon(\r\n-                                          Icons.error_outline,\r\n-                                          color: Colors.red,\r\n-                                          size: 16,\r\n+                                padding: EdgeInsets.only(bottom: 8),\r\n+                                child: Row(\r\n+                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                                  children: [\r\n+                                    Icon(\r\n+                                      Icons.error_outline,\r\n+                                      color: Colors.red,\r\n+                                      size: 16,\r\n+                                    ),\r\n+                                    SizedBox(width: 8),\r\n+                                    Expanded(\r\n+                                      child: Text(\r\n+                                        issue,\r\n+                                        style: TextStyle(\r\n+                                          color: Colors.white,\r\n+                                          fontSize: 12,\r\n                                         ),\r\n-                                        SizedBox(width: 8),\r\n-                                        Expanded(\r\n-                                          child: Text(\r\n-                                            issue,\r\n-                                            style: TextStyle(\r\n-                                              color: Colors.white,\r\n-                                              fontSize: 12,\r\n-                                            ),\r\n-                                          ),\r\n-                                        ),\r\n-                                      ],\r\n+                                      ),\r\n                                     ),\r\n-                                  )),\r\n+                                  ],\r\n+                                ),\r\n+                              )),\r\n                             ],\r\n                           ),\r\n                         ),\r\n                       ),\r\n@@ -306,5 +333,5 @@\n         },\r\n       ),\r\n     );\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                }
            ],
            "date": 1730749588035,
            "name": "Commit-0",
            "content": "// lib/modules/system_operation_also_main_module/screens/system_overview_screen.dart\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter/services.dart';\r\nimport 'package:provider/provider.dart';\r\nimport '../providers/system_state_provider.dart';\r\nimport '../widgets/system_diagram_view.dart';\r\nimport '../widgets/component_control_overlay.dart';\r\nimport '../widgets/graph_overlay.dart';\r\nimport '../widgets/troubleshooting_overlay.dart';\r\nimport '../widgets/system_status_indicator.dart';\r\nimport '../widgets/recipe_progress_indicator.dart';\r\nimport '../widgets/alarm_indicator.dart';\r\nimport '../widgets/recipe_control.dart';\r\n\r\nclass SystemReadinessIndicator extends StatefulWidget {\r\n  @override\r\n  _SystemReadinessIndicatorState createState() => _SystemReadinessIndicatorState();\r\n}\r\n\r\nclass _SystemReadinessIndicatorState extends State<SystemReadinessIndicator> {\r\n  bool _isExpanded = false;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Consumer<SystemStateProvider>(\r\n      builder: (context, systemProvider, child) {\r\n        final issues = systemProvider.getSystemIssues();\r\n        final isReady = issues.isEmpty;\r\n\r\n        // Compact notification that slides up from bottom\r\n        return AnimatedPositioned(\r\n          duration: Duration(milliseconds: 300),\r\n          curve: Curves.easeInOut,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          child: GestureDetector(\r\n            onVerticalDragUpdate: (details) {\r\n              if (details.primaryDelta! < -20) {\r\n                setState(() => _isExpanded = true);\r\n              } else if (details.primaryDelta! > 20) {\r\n                setState(() => _isExpanded = false);\r\n              }\r\n            },\r\n            child: Column(\r\n              mainAxisSize: MainAxisSize.min,\r\n              children: [\r\n                // Compact header always visible\r\n                Container(\r\n                  color: isReady ? Colors.green.withOpacity(0.9) : Colors.red.withOpacity(0.9),\r\n                  child: SafeArea(\r\n                    top: false,\r\n                    child: InkWell(\r\n                      onTap: () => setState(() => _isExpanded = !_isExpanded),\r\n                      child: Padding(\r\n                        padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n                        child: Row(\r\n                          children: [\r\n                            Icon(\r\n                              isReady ? Icons.check_circle : Icons.warning,\r\n                              color: Colors.white,\r\n                              size: 20,\r\n                            ),\r\n                            SizedBox(width: 8),\r\n                            Text(\r\n                              isReady ? 'System Ready' : 'System Not Ready',\r\n                              style: TextStyle(\r\n                                color: Colors.white,\r\n                                fontWeight: FontWeight.bold,\r\n                              ),\r\n                            ),\r\n                            Spacer(),\r\n                            Icon(\r\n                              _isExpanded ? Icons.expand_more : Icons.expand_less,\r\n                              color: Colors.white,\r\n                            ),\r\n                          ],\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n                // Expandable issues list\r\n                if (_isExpanded && !isReady)\r\n                  Container(\r\n                    color: Colors.black87,\r\n                    constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.4),\r\n                    child: SingleChildScrollView(\r\n                      child: SafeArea(\r\n                        top: false,\r\n                        child: Padding(\r\n                          padding: EdgeInsets.all(16),\r\n                          child: Column(\r\n                            crossAxisAlignment: CrossAxisAlignment.start,\r\n                            children: [\r\n                              Text(\r\n                                'Issues:',\r\n                                style: TextStyle(\r\n                                  color: Colors.white,\r\n                                  fontWeight: FontWeight.bold,\r\n                                ),\r\n                              ),\r\n                              SizedBox(height: 8),\r\n                              ...issues.map((issue) => Padding(\r\n                                padding: EdgeInsets.only(bottom: 8),\r\n                                child: Row(\r\n                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n                                  children: [\r\n                                    Icon(\r\n                                      Icons.error_outline,\r\n                                      color: Colors.red,\r\n                                      size: 16,\r\n                                    ),\r\n                                    SizedBox(width: 8),\r\n                                    Expanded(\r\n                                      child: Text(\r\n                                        issue,\r\n                                        style: TextStyle(\r\n                                          color: Colors.white,\r\n                                          fontSize: 12,\r\n                                        ),\r\n                                      ),\r\n                                    ),\r\n                                  ],\r\n                                ),\r\n                              )),\r\n                            ],\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ),\r\n              ],\r\n            ),\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\nclass SystemIssuesDisplay extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final systemProvider = Provider.of<SystemStateProvider>(context);\r\n    final issues = systemProvider.getSystemIssues();\r\n\r\n    return Container(\r\n      width: 300,\r\n      padding: EdgeInsets.all(8),\r\n      decoration: BoxDecoration(\r\n        color: Colors.black54,\r\n        borderRadius: BorderRadius.circular(8),\r\n      ),\r\n      child: Column(\r\n        crossAxisAlignment: CrossAxisAlignment.start,\r\n        children: [\r\n          Text(\r\n            'System Issues:',\r\n            style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),\r\n          ),\r\n          SizedBox(height: 8),\r\n          if (issues.isEmpty)\r\n            Text('No issues detected', style: TextStyle(color: Colors.green))\r\n          else\r\n            ...issues.map((issue) => Text('• $issue', style: TextStyle(color: Colors.white))),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass SystemOverviewScreen extends StatefulWidget {\r\n  const SystemOverviewScreen({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  _SystemOverviewScreenState createState() => _SystemOverviewScreenState();\r\n}\r\n\r\nclass _SystemOverviewScreenState extends State<SystemOverviewScreen> {\r\n  final PageController _pageController = PageController();\r\n  double _zoomFactor = 1.0;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    SystemChrome.setPreferredOrientations([\r\n      DeviceOrientation.landscapeLeft,\r\n      DeviceOrientation.landscapeRight,\r\n    ]);\r\n  }\r\n\r\n  @override\r\n  void dispose() {\r\n    SystemChrome.setPreferredOrientations(DeviceOrientation.values);\r\n    super.dispose();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        leading: IconButton(\r\n          icon: Icon(Icons.arrow_back),\r\n          onPressed: () {\r\n            Navigator.of(context).pop();\r\n          },\r\n        ),\r\n        title: const Text('ALD System Overview'),\r\n        actions: [\r\n          IconButton(\r\n            icon: Icon(Icons.zoom_in),\r\n            onPressed: () {\r\n              setState(() {\r\n                _zoomFactor = _zoomFactor * 1.2;\r\n              });\r\n            },\r\n          ),\r\n          IconButton(\r\n            icon: Icon(Icons.zoom_out),\r\n            onPressed: () {\r\n              setState(() {\r\n                _zoomFactor = _zoomFactor / 1.2;\r\n              });\r\n            },\r\n          ),\r\n          Padding(\r\n            padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n            child: SystemStatusIndicator(),\r\n          ),\r\n        ],\r\n      ),\r\n      body: Consumer<SystemStateProvider>(\r\n        builder: (context, systemProvider, child) {\r\n          return Stack(\r\n            children: [\r\n              SystemDiagramView(\r\n                overlays: [\r\n                  ComponentControlOverlay(overlayId: 'full_overview'),\r\n                  GraphOverlay(overlayId: 'full_overview'),\r\n                  TroubleshootingOverlay(overlayId: 'full_overview'),\r\n                ],\r\n                zoomFactor: _zoomFactor,\r\n                enableOverlaySwiping: true,\r\n              ),\r\n              Positioned(\r\n                top: 10,\r\n                left: 10,\r\n                child: Opacity(\r\n                  opacity: 0.7,\r\n                  child: Container(\r\n                    width: 150,\r\n                    child: RecipeProgressIndicator(),\r\n                  ),\r\n                ),\r\n              ),\r\n              Positioned(\r\n                top: 10,\r\n                right: 10,\r\n                child: Opacity(\r\n                  opacity: 0.7,\r\n                  child: Container(\r\n                    width: 150,\r\n                    child: AlarmIndicator(),\r\n                  ),\r\n                ),\r\n              ),\r\n              Positioned(\r\n                bottom: 10,\r\n                left: 10,\r\n                child: RecipeControl(),\r\n              ),\r\n              if (systemProvider.activeRecipe != null)\r\n                Positioned(\r\n                  bottom: 10,\r\n                  right: 10,\r\n                  child: Opacity(\r\n                    opacity: 0.7,\r\n                    child: Container(\r\n                      padding: EdgeInsets.all(4),\r\n                      decoration: BoxDecoration(\r\n                        color: Colors.black54,\r\n                        borderRadius: BorderRadius.circular(4),\r\n                      ),\r\n                      child: Text(\r\n                        'Active: ${systemProvider.activeRecipe!.name}',\r\n                        style: TextStyle(color: Colors.white, fontSize: 12),\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n              // Add the new SystemReadinessIndicator\r\n              Positioned(\r\n                top: 60,\r\n                left: 10,\r\n                child: SystemReadinessIndicator(),\r\n              ),\r\n            ],\r\n          );\r\n        },\r\n      ),\r\n    );\r\n  }\r\n}"
        }
    ]
}