{
    "sourceFile": "lib/modules/system_operation_also_main_module/models/recipe.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1730731456591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1730731456591,
            "name": "Commit-0",
            "content": "// lib/modules/system_operation_also_main_module/models/recipe.dart\r\n\r\nimport 'package:cloud_firestore/cloud_firestore.dart';\r\n\r\nclass Recipe {\r\n  String id;\r\n  String name;\r\n  List<RecipeStep> steps;\r\n  String substrate;\r\n  double chamberTemperatureSetPoint;\r\n  double pressureSetPoint;\r\n  int version;\r\n  DateTime lastModified;\r\n\r\n  Recipe({\r\n    required this.id,\r\n    required this.name,\r\n    required this.steps,\r\n    required this.substrate,\r\n    this.chamberTemperatureSetPoint = 150.0,\r\n    this.pressureSetPoint = 1.0,\r\n    this.version = 1,\r\n    DateTime? lastModified,\r\n  }) : this.lastModified = lastModified ?? DateTime.now();\r\n\r\n  factory Recipe.fromJson(Map<String, dynamic> json) {\r\n    return Recipe(\r\n      id: json['id'] as String,\r\n      name: json['name'] as String,\r\n      steps: (json['steps'] as List<dynamic>)\r\n          .map((e) => RecipeStep.fromJson(e as Map<String, dynamic>))\r\n          .toList(),\r\n      substrate: json['substrate'] as String,\r\n      chamberTemperatureSetPoint: json['chamberTemperatureSetPoint'] as double? ?? 150.0,\r\n      pressureSetPoint: json['pressureSetPoint'] as double? ?? 1.0,\r\n      version: json['version'] as int? ?? 1,\r\n      lastModified: (json['lastModified'] as Timestamp).toDate(),\r\n    );\r\n  }\r\n\r\n  Map<String, dynamic> toJson() => {\r\n    'id': id,\r\n    'name': name,\r\n    'steps': steps.map((e) => e.toJson()).toList(),\r\n    'substrate': substrate,\r\n    'chamberTemperatureSetPoint': chamberTemperatureSetPoint,\r\n    'pressureSetPoint': pressureSetPoint,\r\n    'version': version,\r\n    'lastModified': Timestamp.fromDate(lastModified),\r\n  };\r\n}\r\n\r\nclass RecipeStep {\r\n  StepType type;\r\n  Map<String, dynamic> parameters;\r\n  List<RecipeStep>? subSteps;\r\n\r\n  RecipeStep({\r\n    required this.type,\r\n    required this.parameters,\r\n    this.subSteps,\r\n  });\r\n\r\n  factory RecipeStep.fromJson(Map<String, dynamic> json) {\r\n    return RecipeStep(\r\n      type: StepType.values.firstWhere((e) => e.toString() == 'StepType.${json['type']}'),\r\n      parameters: Map<String, dynamic>.from(json['parameters']).map((key, value) {\r\n        if (key == 'valveType' && value is String) {\r\n          return MapEntry(key, ValveType.values.firstWhere((e) => e.toString() == 'ValveType.$value'));\r\n        }\r\n        return MapEntry(key, value);\r\n      }),\r\n      subSteps: json['subSteps'] != null\r\n          ? (json['subSteps'] as List<dynamic>)\r\n          .map((e) => RecipeStep.fromJson(e as Map<String, dynamic>))\r\n          .toList()\r\n          : null,\r\n    );\r\n  }\r\n\r\n  Map<String, dynamic> toJson() => {\r\n    'type': type.toString().split('.').last,\r\n    'parameters': parameters.map((key, value) {\r\n      if (value is ValveType) {\r\n        return MapEntry(key, value.toString().split('.').last);\r\n      }\r\n      return MapEntry(key, value);\r\n    }),\r\n    'subSteps': subSteps?.map((e) => e.toJson()).toList(),\r\n  };\r\n}\r\n\r\nenum StepType { loop, valve, purge, setParameter }\r\n\r\nenum ValveType { valveA, valveB }\r\n\r\n\r\n/*\r\nclass Recipe {\r\n    /// Unique identifier for the recipe\r\n    String id;\r\n    /// Recipe name\r\n    String name;\r\n    /// Ordered list of recipe steps\r\n    List<RecipeStep> steps;\r\n    /// Substrate material\r\n    String substrate;\r\n    /// Target chamber temperature\r\n    double chamberTemperatureSetPoint;\r\n    /// Target pressure\r\n    double pressureSetPoint;\r\n    /// Recipe version number\r\n    int version;\r\n    /// Last modification timestamp\r\n    DateTime lastModified;\r\n\r\n    /// Constructor for creating a new recipe\r\n    Recipe({\r\n        required this.id,\r\n        required this.name,\r\n        required this.steps,\r\n        required this.substrate,\r\n        this.chamberTemperatureSetPoint = 150.0,\r\n        this.pressureSetPoint = 1.0,\r\n        this.version = 1,\r\n        DateTime? lastModified,\r\n    });\r\n}\r\n\r\nclass RecipeStep {\r\n    /// Type of recipe step (loop, valve, purge, setParameter)\r\n    StepType type;\r\n    /// Parameters specific to the step type\r\n    Map<String, dynamic> parameters;\r\n    /// Sub-steps for loop type steps\r\n    List<RecipeStep>? subSteps;\r\n\r\n    /// Constructor for creating a recipe step\r\n    RecipeStep({\r\n        required this.type,\r\n        required this.parameters,\r\n        this.subSteps,\r\n    });\r\n}\r\n\r\nenum StepType { loop, valve, purge, setParameter }\r\nenum ValveType { valveA, valveB }\r\n\r\n*/"
        }
    ]
}