{
    "sourceFile": "lib/modules/system_operation_also_main_module/widgets/recipe_control.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1730749085038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730749166700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,94 @@\n       },\r\n     );\r\n   }\r\n \r\n+  Widget _buildRecipeControls(BuildContext context, RecipeProvider recipeProvider, SystemStateProvider systemStateProvider) {\r\n+    return Column(\r\n+      mainAxisSize: MainAxisSize.min,\r\n+      children: [\r\n+        Row(\r\n+          mainAxisSize: MainAxisSize.min,\r\n+          children: [\r\n+            _buildControlButton(\r\n+              onPressed: systemStateProvider.selectedRecipe != null && \r\n+                        systemStateProvider.activeRecipe == null\r\n+                  ? () => _startRecipe(context, systemStateProvider)\r\n+                  : null,\r\n+              child: Icon(Icons.play_arrow, color: Colors.white, size: 18),\r\n+              color: Colors.green,\r\n+            ),\r\n+            SizedBox(width: 8),\r\n+            _buildControlButton(\r\n+              onPressed: systemStateProvider.activeRecipe != null\r\n+                  ? () => systemStateProvider.stopSystem()\r\n+                  : null,\r\n+              child: Icon(Icons.stop, color: Colors.white, size: 18),\r\n+              color: Colors.red,\r\n+            ),\r\n+          ],\r\n+        ),\r\n+        SizedBox(height: 8),\r\n+        TextButton.icon(\r\n+          onPressed: () => _checkSystemStatus(context, systemStateProvider),\r\n+          icon: Icon(Icons.check_circle_outline, size: 16),\r\n+          label: Text('Check System Status', style: TextStyle(fontSize: 12)),\r\n+        ),\r\n+      ],\r\n+    );\r\n+  }\r\n+\r\n+  void _checkSystemStatus(BuildContext context, SystemStateProvider systemStateProvider) {\r\n+    final issues = systemStateProvider.getSystemIssues();\r\n+    \r\n+    showDialog(\r\n+      context: context,\r\n+      builder: (BuildContext context) {\r\n+        return AlertDialog(\r\n+          title: Text(\r\n+            issues.isEmpty ? 'System Ready' : 'System Issues Found',\r\n+            style: TextStyle(\r\n+              color: issues.isEmpty ? Colors.green : Colors.orange,\r\n+            ),\r\n+          ),\r\n+          content: SingleChildScrollView(\r\n+            child: Column(\r\n+              crossAxisAlignment: CrossAxisAlignment.start,\r\n+              mainAxisSize: MainAxisSize.min,\r\n+              children: issues.isEmpty\r\n+                  ? [Text('All system checks passed. Ready to execute recipe.')]\r\n+                  : [\r\n+                      Text('The following issues were found:',\r\n+                          style: TextStyle(fontWeight: FontWeight.bold)),\r\n+                      SizedBox(height: 12),\r\n+                      ...issues.map((issue) => Padding(\r\n+                            padding: EdgeInsets.symmetric(vertical: 4),\r\n+                            child: Row(\r\n+                              crossAxisAlignment: CrossAxisAlignment.start,\r\n+                              children: [\r\n+                                Icon(Icons.warning,\r\n+                                    color: Colors.orange, size: 20),\r\n+                                SizedBox(width: 8),\r\n+                                Expanded(child: Text(issue)),\r\n+                              ],\r\n+                            ),\r\n+                          )),\r\n+                    ],\r\n+            ),\r\n+          ),\r\n+          actions: [\r\n+            TextButton(\r\n+              onPressed: () => Navigator.of(context).pop(),\r\n+              child: Text('Close'),\r\n+            ),\r\n+          ],\r\n+        );\r\n+      },\r\n+    );\r\n+  }\r\n+\r\n+\r\n+\r\n   Widget _buildRecipeSelector(BuildContext context,\r\n       RecipeProvider recipeProvider, SystemStateProvider systemStateProvider) {\r\n     return Container(\r\n       width: 150,\r\n"
                },
                {
                    "date": 1730749202391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,32 +152,8 @@\n       ),\r\n     );\r\n   }\r\n \r\n-  Widget _buildRecipeControls(BuildContext context,\r\n-      RecipeProvider recipeProvider, SystemStateProvider systemStateProvider) {\r\n-    return Row(\r\n-      mainAxisSize: MainAxisSize.min,\r\n-      children: [\r\n-        _buildControlButton(\r\n-          onPressed: systemStateProvider.selectedRecipe != null &&\r\n-                  systemStateProvider.activeRecipe == null\r\n-              ? () => _startRecipe(context, systemStateProvider)\r\n-              : null,\r\n-          child: Icon(Icons.play_arrow, color: Colors.white, size: 18),\r\n-          color: Colors.green,\r\n-        ),\r\n-        SizedBox(width: 8),\r\n-        _buildControlButton(\r\n-          onPressed: systemStateProvider.activeRecipe != null\r\n-              ? () => systemStateProvider.stopSystem()\r\n-              : null,\r\n-          child: Icon(Icons.stop, color: Colors.white, size: 18),\r\n-          color: Colors.red,\r\n-        ),\r\n-      ],\r\n-    );\r\n-  }\r\n \r\n   Widget _buildControlButton(\r\n       {required VoidCallback? onPressed,\r\n       required Widget child,\r\n"
                }
            ],
            "date": 1730749085038,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\nimport '../providers/recipe_provider.dart';\r\nimport '../providers/system_state_provider.dart';\r\nimport '../models/recipe.dart';\r\n\r\nclass RecipeControl extends StatelessWidget {\r\n  const RecipeControl({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Consumer2<RecipeProvider, SystemStateProvider>(\r\n      builder: (context, recipeProvider, systemStateProvider, child) {\r\n        return Opacity(\r\n          opacity: 0.7,\r\n          child: Container(\r\n            decoration: BoxDecoration(\r\n              color: Colors.black54,\r\n              borderRadius: BorderRadius.circular(8),\r\n            ),\r\n            padding: const EdgeInsets.all(8.0),\r\n            child: Column(\r\n              mainAxisSize: MainAxisSize.min,\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: [\r\n                _buildRecipeSelector(\r\n                    context, recipeProvider, systemStateProvider),\r\n                SizedBox(height: 4),\r\n                _buildRecipeControls(\r\n                    context, recipeProvider, systemStateProvider),\r\n              ],\r\n            ),\r\n          ),\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  Widget _buildRecipeSelector(BuildContext context,\r\n      RecipeProvider recipeProvider, SystemStateProvider systemStateProvider) {\r\n    return Container(\r\n      width: 150,\r\n      child: DropdownButton<String>(\r\n        isExpanded: true,\r\n        value: systemStateProvider.selectedRecipe?.id,\r\n        hint: Text('Select recipe',\r\n            style: TextStyle(color: Colors.white70, fontSize: 12)),\r\n        style: TextStyle(color: Colors.white, fontSize: 12),\r\n        dropdownColor: Colors.black87,\r\n        underline: Container(\r\n          height: 1,\r\n          color: Colors.white70,\r\n        ),\r\n        onChanged: (String? newValue) {\r\n          if (newValue != null) {\r\n            systemStateProvider.selectRecipe(newValue);\r\n          }\r\n        },\r\n        items: recipeProvider.recipes\r\n            .map<DropdownMenuItem<String>>((Recipe recipe) {\r\n          return DropdownMenuItem<String>(\r\n            value: recipe.id,\r\n            child: Text(recipe.name, overflow: TextOverflow.ellipsis),\r\n          );\r\n        }).toList(),\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _buildRecipeControls(BuildContext context,\r\n      RecipeProvider recipeProvider, SystemStateProvider systemStateProvider) {\r\n    return Row(\r\n      mainAxisSize: MainAxisSize.min,\r\n      children: [\r\n        _buildControlButton(\r\n          onPressed: systemStateProvider.selectedRecipe != null &&\r\n                  systemStateProvider.activeRecipe == null\r\n              ? () => _startRecipe(context, systemStateProvider)\r\n              : null,\r\n          child: Icon(Icons.play_arrow, color: Colors.white, size: 18),\r\n          color: Colors.green,\r\n        ),\r\n        SizedBox(width: 8),\r\n        _buildControlButton(\r\n          onPressed: systemStateProvider.activeRecipe != null\r\n              ? () => systemStateProvider.stopSystem()\r\n              : null,\r\n          child: Icon(Icons.stop, color: Colors.white, size: 18),\r\n          color: Colors.red,\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  Widget _buildControlButton(\r\n      {required VoidCallback? onPressed,\r\n      required Widget child,\r\n      required Color color}) {\r\n    return SizedBox(\r\n      width: 30,\r\n      height: 30,\r\n      child: ElevatedButton(\r\n        onPressed: onPressed,\r\n        child: child,\r\n        style: ElevatedButton.styleFrom(\r\n          padding: EdgeInsets.zero,\r\n          backgroundColor: color,\r\n          shape: RoundedRectangleBorder(\r\n            borderRadius: BorderRadius.circular(4),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  void _startRecipe(BuildContext context, SystemStateProvider systemProvider) {\r\n    if (!systemProvider.isSystemReadyForRecipe()) {\r\n      showDialog(\r\n        context: context,\r\n        builder: (BuildContext context) {\r\n          return AlertDialog(\r\n            title: Text('System Not Ready'),\r\n            content: SingleChildScrollView(\r\n              child: Column(\r\n                crossAxisAlignment: CrossAxisAlignment.start,\r\n                mainAxisSize: MainAxisSize.min,\r\n                children: [\r\n                  Text('The following issues need to be resolved:',\r\n                      style: TextStyle(fontWeight: FontWeight.bold)),\r\n                  SizedBox(height: 12),\r\n                  ...systemProvider\r\n                      .getSystemIssues()\r\n                      .map((issue) => Padding(\r\n                            padding: EdgeInsets.symmetric(vertical: 4),\r\n                            child: Row(\r\n                              crossAxisAlignment: CrossAxisAlignment.start,\r\n                              children: [\r\n                                Icon(Icons.warning,\r\n                                    color: Colors.orange, size: 20),\r\n                                SizedBox(width: 8),\r\n                                Expanded(child: Text(issue)),\r\n                              ],\r\n                            ),\r\n                          ))\r\n                      .toList(),\r\n                ],\r\n              ),\r\n            ),\r\n            actions: [\r\n              TextButton(\r\n                onPressed: () => Navigator.of(context).pop(),\r\n                child: Text('Close'),\r\n              ),\r\n            ],\r\n          );\r\n        },\r\n      );\r\n    } else {\r\n      systemProvider.executeRecipe(systemProvider.selectedRecipe!);\r\n    }\r\n  }\r\n}\r\n"
        }
    ]
}