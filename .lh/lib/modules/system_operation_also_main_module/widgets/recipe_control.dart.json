{
    "sourceFile": "lib/modules/system_operation_also_main_module/widgets/recipe_control.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1734134090037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734134207004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,21 +49,22 @@\n     RecipeState recipeState,\r\n     SystemStateState systemState,\r\n   ) {\r\n     final canStart = systemState.canStart &&\r\n-                    recipeState.activeRecipe == null &&\r\n-                    recipeState.isExecutionReady;\r\n+        recipeState.activeRecipe == null &&\r\n+        recipeState.isExecutionReady;\r\n     final canStop = systemState.canStop &&\r\n-                   recipeState.executionStatus == RecipeExecutionStatus.running;\r\n+        recipeState.executionStatus == RecipeExecutionStatus.running;\r\n \r\n     return Column(\r\n       mainAxisSize: MainAxisSize.min,\r\n       children: [\r\n         Row(\r\n           mainAxisSize: MainAxisSize.min,\r\n           children: [\r\n             _buildControlButton(\r\n-              onPressed: canStart ? () => _startRecipe(context, systemState) : null,\r\n+              onPressed:\r\n+                  canStart ? () => _startRecipe(context, systemState) : null,\r\n               child: Icon(Icons.play_arrow, color: Colors.white, size: 18),\r\n               color: Colors.green,\r\n             ),\r\n             SizedBox(width: 8),\r\n@@ -107,12 +108,20 @@\n         onChanged: systemState.isSystemRunning\r\n             ? null\r\n             : (String? newValue) {\r\n                 if (newValue != null) {\r\n-                  context.read<RecipeBloc>().add(SelectRecipe(newValue));\r\n+                  // Find the recipe from the list first\r\n+                  final selectedRecipe = recipeState.recipes.firstWhere(\r\n+                    (recipe) => recipe.id == newValue,\r\n+                  );\r\n+                  // Then dispatch the proper event\r\n+                  context\r\n+                      .read<RecipeBloc>()\r\n+                      .add(SetActiveRecipe(selectedRecipe));\r\n                 }\r\n               },\r\n-        items: recipeState.recipes.map<DropdownMenuItem<String>>((Recipe recipe) {\r\n+        items:\r\n+            recipeState.recipes.map<DropdownMenuItem<String>>((Recipe recipe) {\r\n           return DropdownMenuItem<String>(\r\n             value: recipe.id,\r\n             child: Text(recipe.name, overflow: TextOverflow.ellipsis),\r\n           );\r\n@@ -144,18 +153,19 @@\n                       Text('The following issues were found:',\r\n                           style: TextStyle(fontWeight: FontWeight.bold)),\r\n                       SizedBox(height: 12),\r\n                       ...issues.map((issue) => Padding(\r\n-                        padding: EdgeInsets.symmetric(vertical: 4),\r\n-                        child: Row(\r\n-                          crossAxisAlignment: CrossAxisAlignment.start,\r\n-                          children: [\r\n-                            Icon(Icons.warning, color: Colors.orange, size: 20),\r\n-                            SizedBox(width: 8),\r\n-                            Expanded(child: Text(issue)),\r\n-                          ],\r\n-                        ),\r\n-                      )),\r\n+                            padding: EdgeInsets.symmetric(vertical: 4),\r\n+                            child: Row(\r\n+                              crossAxisAlignment: CrossAxisAlignment.start,\r\n+                              children: [\r\n+                                Icon(Icons.warning,\r\n+                                    color: Colors.orange, size: 20),\r\n+                                SizedBox(width: 8),\r\n+                                Expanded(child: Text(issue)),\r\n+                              ],\r\n+                            ),\r\n+                          )),\r\n                     ],\r\n             ),\r\n           ),\r\n           actions: [\r\n@@ -206,18 +216,18 @@\n                   Text('The following issues need to be resolved:',\r\n                       style: TextStyle(fontWeight: FontWeight.bold)),\r\n                   SizedBox(height: 12),\r\n                   ...systemState.systemIssues.map((issue) => Padding(\r\n-                    padding: EdgeInsets.symmetric(vertical: 4),\r\n-                    child: Row(\r\n-                      crossAxisAlignment: CrossAxisAlignment.start,\r\n-                      children: [\r\n-                        Icon(Icons.warning, color: Colors.orange, size: 20),\r\n-                        SizedBox(width: 8),\r\n-                        Expanded(child: Text(issue)),\r\n-                      ],\r\n-                    ),\r\n-                  )),\r\n+                        padding: EdgeInsets.symmetric(vertical: 4),\r\n+                        child: Row(\r\n+                          crossAxisAlignment: CrossAxisAlignment.start,\r\n+                          children: [\r\n+                            Icon(Icons.warning, color: Colors.orange, size: 20),\r\n+                            SizedBox(width: 8),\r\n+                            Expanded(child: Text(issue)),\r\n+                          ],\r\n+                        ),\r\n+                      )),\r\n                 ],\r\n               ),\r\n             ),\r\n             actions: [\r\n@@ -232,5 +242,5 @@\n     } else {\r\n       context.read<SystemStateBloc>().add(StartSystem());\r\n     }\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1734134256865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,16 +108,11 @@\n         onChanged: systemState.isSystemRunning\r\n             ? null\r\n             : (String? newValue) {\r\n                 if (newValue != null) {\r\n-                  // Find the recipe from the list first\r\n-                  final selectedRecipe = recipeState.recipes.firstWhere(\r\n-                    (recipe) => recipe.id == newValue,\r\n-                  );\r\n-                  // Then dispatch the proper event\r\n                   context\r\n                       .read<RecipeBloc>()\r\n-                      .add(SetActiveRecipe(selectedRecipe));\r\n+                      .add(StartRecipeExecution(newValue));\r\n                 }\r\n               },\r\n         items:\r\n             recipeState.recipes.map<DropdownMenuItem<String>>((Recipe recipe) {\r\n"
                },
                {
                    "date": 1734134312999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,30 +49,31 @@\n     RecipeState recipeState,\r\n     SystemStateState systemState,\r\n   ) {\r\n     final canStart = systemState.canStart &&\r\n-        recipeState.activeRecipe == null &&\r\n-        recipeState.isExecutionReady;\r\n+                    recipeState.activeRecipe == null &&\r\n+                    recipeState.isExecutionReady;\r\n     final canStop = systemState.canStop &&\r\n-        recipeState.executionStatus == RecipeExecutionStatus.running;\r\n+                   recipeState.executionStatus == RecipeExecutionStatus.running;\r\n \r\n     return Column(\r\n       mainAxisSize: MainAxisSize.min,\r\n       children: [\r\n         Row(\r\n           mainAxisSize: MainAxisSize.min,\r\n           children: [\r\n             _buildControlButton(\r\n-              onPressed:\r\n-                  canStart ? () => _startRecipe(context, systemState) : null,\r\n+              onPressed: canStart && recipeState.activeRecipe != null\r\n+                ? () => _startRecipe(context, recipeState.activeRecipe!.id)\r\n+                : null,\r\n               child: Icon(Icons.play_arrow, color: Colors.white, size: 18),\r\n               color: Colors.green,\r\n             ),\r\n             SizedBox(width: 8),\r\n             _buildControlButton(\r\n               onPressed: canStop\r\n-                  ? () => context.read<SystemStateBloc>().add(StopSystem())\r\n-                  : null,\r\n+                ? () => context.read<RecipeBloc>().add(StopRecipeExecution())\r\n+                : null,\r\n               child: Icon(Icons.stop, color: Colors.white, size: 18),\r\n               color: Colors.red,\r\n             ),\r\n           ],\r\n@@ -108,15 +109,12 @@\n         onChanged: systemState.isSystemRunning\r\n             ? null\r\n             : (String? newValue) {\r\n                 if (newValue != null) {\r\n-                  context\r\n-                      .read<RecipeBloc>()\r\n-                      .add(StartRecipeExecution(newValue));\r\n+                  context.read<RecipeBloc>().add(StartRecipeExecution(newValue));\r\n                 }\r\n               },\r\n-        items:\r\n-            recipeState.recipes.map<DropdownMenuItem<String>>((Recipe recipe) {\r\n+        items: recipeState.recipes.map<DropdownMenuItem<String>>((Recipe recipe) {\r\n           return DropdownMenuItem<String>(\r\n             value: recipe.id,\r\n             child: Text(recipe.name, overflow: TextOverflow.ellipsis),\r\n           );\r\n@@ -148,19 +146,18 @@\n                       Text('The following issues were found:',\r\n                           style: TextStyle(fontWeight: FontWeight.bold)),\r\n                       SizedBox(height: 12),\r\n                       ...issues.map((issue) => Padding(\r\n-                            padding: EdgeInsets.symmetric(vertical: 4),\r\n-                            child: Row(\r\n-                              crossAxisAlignment: CrossAxisAlignment.start,\r\n-                              children: [\r\n-                                Icon(Icons.warning,\r\n-                                    color: Colors.orange, size: 20),\r\n-                                SizedBox(width: 8),\r\n-                                Expanded(child: Text(issue)),\r\n-                              ],\r\n-                            ),\r\n-                          )),\r\n+                        padding: EdgeInsets.symmetric(vertical: 4),\r\n+                        child: Row(\r\n+                          crossAxisAlignment: CrossAxisAlignment.start,\r\n+                          children: [\r\n+                            Icon(Icons.warning, color: Colors.orange, size: 20),\r\n+                            SizedBox(width: 8),\r\n+                            Expanded(child: Text(issue)),\r\n+                          ],\r\n+                        ),\r\n+                      )),\r\n                     ],\r\n             ),\r\n           ),\r\n           actions: [\r\n@@ -195,9 +192,11 @@\n       ),\r\n     );\r\n   }\r\n \r\n-  void _startRecipe(BuildContext context, SystemStateState systemState) {\r\n+  void _startRecipe(BuildContext context, String recipeId) {\r\n+    final systemState = context.read<SystemStateBloc>().state;\r\n+\r\n     if (!systemState.isReadinessCheckPassed) {\r\n       showDialog(\r\n         context: context,\r\n         builder: (BuildContext context) {\r\n@@ -211,18 +210,18 @@\n                   Text('The following issues need to be resolved:',\r\n                       style: TextStyle(fontWeight: FontWeight.bold)),\r\n                   SizedBox(height: 12),\r\n                   ...systemState.systemIssues.map((issue) => Padding(\r\n-                        padding: EdgeInsets.symmetric(vertical: 4),\r\n-                        child: Row(\r\n-                          crossAxisAlignment: CrossAxisAlignment.start,\r\n-                          children: [\r\n-                            Icon(Icons.warning, color: Colors.orange, size: 20),\r\n-                            SizedBox(width: 8),\r\n-                            Expanded(child: Text(issue)),\r\n-                          ],\r\n-                        ),\r\n-                      )),\r\n+                    padding: EdgeInsets.symmetric(vertical: 4),\r\n+                    child: Row(\r\n+                      crossAxisAlignment: CrossAxisAlignment.start,\r\n+                      children: [\r\n+                        Icon(Icons.warning, color: Colors.orange, size: 20),\r\n+                        SizedBox(width: 8),\r\n+                        Expanded(child: Text(issue)),\r\n+                      ],\r\n+                    ),\r\n+                  )),\r\n                 ],\r\n               ),\r\n             ),\r\n             actions: [\r\n@@ -234,8 +233,8 @@\n           );\r\n         },\r\n       );\r\n     } else {\r\n-      context.read<SystemStateBloc>().add(StartSystem());\r\n+      context.read<RecipeBloc>().add(StartRecipeExecution(recipeId));\r\n     }\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1734134090037,
            "name": "Commit-0",
            "content": "// lib/modules/system_operation_also_main_module/widgets/recipe_control.dart\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\nimport '../../../blocs/recipe/bloc/recipe_bloc.dart';\r\nimport '../../../blocs/recipe/bloc/recipe_event.dart';\r\nimport '../../../blocs/recipe/bloc/recipe_state.dart';\r\nimport '../../../blocs/system_state/bloc/system_state_bloc.dart';\r\nimport '../../../blocs/system_state/bloc/system_state_event.dart';\r\nimport '../../../blocs/system_state/bloc/system_state_state.dart';\r\nimport '../models/recipe.dart';\r\n\r\nclass RecipeControl extends StatelessWidget {\r\n  const RecipeControl({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return BlocBuilder<SystemStateBloc, SystemStateState>(\r\n      builder: (context, systemState) {\r\n        return BlocBuilder<RecipeBloc, RecipeState>(\r\n          builder: (context, recipeState) {\r\n            return Opacity(\r\n              opacity: 0.7,\r\n              child: Container(\r\n                decoration: BoxDecoration(\r\n                  color: Colors.black54,\r\n                  borderRadius: BorderRadius.circular(8),\r\n                ),\r\n                padding: const EdgeInsets.all(8.0),\r\n                child: Column(\r\n                  mainAxisSize: MainAxisSize.min,\r\n                  crossAxisAlignment: CrossAxisAlignment.start,\r\n                  children: [\r\n                    _buildRecipeSelector(context, recipeState, systemState),\r\n                    SizedBox(height: 4),\r\n                    _buildRecipeControls(context, recipeState, systemState),\r\n                  ],\r\n                ),\r\n              ),\r\n            );\r\n          },\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  Widget _buildRecipeControls(\r\n    BuildContext context,\r\n    RecipeState recipeState,\r\n    SystemStateState systemState,\r\n  ) {\r\n    final canStart = systemState.canStart &&\r\n                    recipeState.activeRecipe == null &&\r\n                    recipeState.isExecutionReady;\r\n    final canStop = systemState.canStop &&\r\n                   recipeState.executionStatus == RecipeExecutionStatus.running;\r\n\r\n    return Column(\r\n      mainAxisSize: MainAxisSize.min,\r\n      children: [\r\n        Row(\r\n          mainAxisSize: MainAxisSize.min,\r\n          children: [\r\n            _buildControlButton(\r\n              onPressed: canStart ? () => _startRecipe(context, systemState) : null,\r\n              child: Icon(Icons.play_arrow, color: Colors.white, size: 18),\r\n              color: Colors.green,\r\n            ),\r\n            SizedBox(width: 8),\r\n            _buildControlButton(\r\n              onPressed: canStop\r\n                  ? () => context.read<SystemStateBloc>().add(StopSystem())\r\n                  : null,\r\n              child: Icon(Icons.stop, color: Colors.white, size: 18),\r\n              color: Colors.red,\r\n            ),\r\n          ],\r\n        ),\r\n        SizedBox(height: 8),\r\n        TextButton.icon(\r\n          onPressed: () => _checkSystemStatus(context, systemState),\r\n          icon: Icon(Icons.check_circle_outline, size: 16),\r\n          label: Text('Check System Status', style: TextStyle(fontSize: 12)),\r\n        ),\r\n      ],\r\n    );\r\n  }\r\n\r\n  Widget _buildRecipeSelector(\r\n    BuildContext context,\r\n    RecipeState recipeState,\r\n    SystemStateState systemState,\r\n  ) {\r\n    return Container(\r\n      width: 150,\r\n      child: DropdownButton<String>(\r\n        isExpanded: true,\r\n        value: recipeState.activeRecipe?.id,\r\n        hint: Text('Select recipe',\r\n            style: TextStyle(color: Colors.white70, fontSize: 12)),\r\n        style: TextStyle(color: Colors.white, fontSize: 12),\r\n        dropdownColor: Colors.black87,\r\n        underline: Container(\r\n          height: 1,\r\n          color: Colors.white70,\r\n        ),\r\n        onChanged: systemState.isSystemRunning\r\n            ? null\r\n            : (String? newValue) {\r\n                if (newValue != null) {\r\n                  context.read<RecipeBloc>().add(SelectRecipe(newValue));\r\n                }\r\n              },\r\n        items: recipeState.recipes.map<DropdownMenuItem<String>>((Recipe recipe) {\r\n          return DropdownMenuItem<String>(\r\n            value: recipe.id,\r\n            child: Text(recipe.name, overflow: TextOverflow.ellipsis),\r\n          );\r\n        }).toList(),\r\n      ),\r\n    );\r\n  }\r\n\r\n  void _checkSystemStatus(BuildContext context, SystemStateState systemState) {\r\n    final issues = systemState.systemIssues;\r\n\r\n    showDialog(\r\n      context: context,\r\n      builder: (BuildContext context) {\r\n        return AlertDialog(\r\n          title: Text(\r\n            issues.isEmpty ? 'System Ready' : 'System Issues Found',\r\n            style: TextStyle(\r\n              color: issues.isEmpty ? Colors.green : Colors.orange,\r\n            ),\r\n          ),\r\n          content: SingleChildScrollView(\r\n            child: Column(\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              mainAxisSize: MainAxisSize.min,\r\n              children: issues.isEmpty\r\n                  ? [Text('All system checks passed. Ready to execute recipe.')]\r\n                  : [\r\n                      Text('The following issues were found:',\r\n                          style: TextStyle(fontWeight: FontWeight.bold)),\r\n                      SizedBox(height: 12),\r\n                      ...issues.map((issue) => Padding(\r\n                        padding: EdgeInsets.symmetric(vertical: 4),\r\n                        child: Row(\r\n                          crossAxisAlignment: CrossAxisAlignment.start,\r\n                          children: [\r\n                            Icon(Icons.warning, color: Colors.orange, size: 20),\r\n                            SizedBox(width: 8),\r\n                            Expanded(child: Text(issue)),\r\n                          ],\r\n                        ),\r\n                      )),\r\n                    ],\r\n            ),\r\n          ),\r\n          actions: [\r\n            TextButton(\r\n              onPressed: () => Navigator.of(context).pop(),\r\n              child: Text('Close'),\r\n            ),\r\n          ],\r\n        );\r\n      },\r\n    );\r\n  }\r\n\r\n  Widget _buildControlButton({\r\n    required VoidCallback? onPressed,\r\n    required Widget child,\r\n    required Color color,\r\n  }) {\r\n    return SizedBox(\r\n      width: 30,\r\n      height: 30,\r\n      child: ElevatedButton(\r\n        onPressed: onPressed,\r\n        child: child,\r\n        style: ElevatedButton.styleFrom(\r\n          padding: EdgeInsets.zero,\r\n          backgroundColor: color,\r\n          shape: RoundedRectangleBorder(\r\n            borderRadius: BorderRadius.circular(4),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  void _startRecipe(BuildContext context, SystemStateState systemState) {\r\n    if (!systemState.isReadinessCheckPassed) {\r\n      showDialog(\r\n        context: context,\r\n        builder: (BuildContext context) {\r\n          return AlertDialog(\r\n            title: Text('System Not Ready'),\r\n            content: SingleChildScrollView(\r\n              child: Column(\r\n                crossAxisAlignment: CrossAxisAlignment.start,\r\n                mainAxisSize: MainAxisSize.min,\r\n                children: [\r\n                  Text('The following issues need to be resolved:',\r\n                      style: TextStyle(fontWeight: FontWeight.bold)),\r\n                  SizedBox(height: 12),\r\n                  ...systemState.systemIssues.map((issue) => Padding(\r\n                    padding: EdgeInsets.symmetric(vertical: 4),\r\n                    child: Row(\r\n                      crossAxisAlignment: CrossAxisAlignment.start,\r\n                      children: [\r\n                        Icon(Icons.warning, color: Colors.orange, size: 20),\r\n                        SizedBox(width: 8),\r\n                        Expanded(child: Text(issue)),\r\n                      ],\r\n                    ),\r\n                  )),\r\n                ],\r\n              ),\r\n            ),\r\n            actions: [\r\n              TextButton(\r\n                onPressed: () => Navigator.of(context).pop(),\r\n                child: Text('Close'),\r\n              ),\r\n            ],\r\n          );\r\n        },\r\n      );\r\n    } else {\r\n      context.read<SystemStateBloc>().add(StartSystem());\r\n    }\r\n  }\r\n}"
        }
    ]
}