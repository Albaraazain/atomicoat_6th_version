{
    "sourceFile": "test/widgets/monitoring/parameter_visualization_widget_test.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1734050071531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1734050071531,
            "name": "Commit-0",
            "content": "// test/widgets/monitoring/parameter_visualization_widget_test.dart\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_test/flutter_test.dart';\r\nimport 'package:fl_chart/fl_chart.dart';\r\nimport '../../../lib/modules/system_operation_also_main_module/models/data_point.dart';\r\nimport '../../../lib/widgets/monitoring/parameter_visualization_widget.dart';\r\n\r\nvoid main() {\r\n  final testDataPoints = [\r\n    DataPoint(timestamp: DateTime.now().subtract(Duration(minutes: 5)), value: 25.0),\r\n    DataPoint(timestamp: DateTime.now().subtract(Duration(minutes: 4)), value: 26.0),\r\n    DataPoint(timestamp: DateTime.now().subtract(Duration(minutes: 3)), value: 24.0),\r\n    DataPoint(timestamp: DateTime.now().subtract(Duration(minutes: 2)), value: 27.0),\r\n    DataPoint(timestamp: DateTime.now().subtract(Duration(minutes: 1)), value: 25.5),\r\n  ];\r\n\r\n  final testThresholds = {\r\n    'min': 20.0,\r\n    'max': 30.0,\r\n  };\r\n\r\n  testWidgets('renders chart with data points', (WidgetTester tester) async {\r\n    await tester.pumpWidget(\r\n      MaterialApp(\r\n        home: Scaffold(\r\n          body: ParameterVisualizationWidget(\r\n            componentId: 'test-component',\r\n            parameterName: 'temperature',\r\n            dataPoints: testDataPoints,\r\n            thresholds: testThresholds,\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n\r\n    expect(find.byType(LineChart), findsOneWidget);\r\n    expect(find.text('temperature Trend'), findsOneWidget);\r\n  });\r\n\r\n  testWidgets('shows no data message when empty', (WidgetTester tester) async {\r\n    await tester.pumpWidget(\r\n      MaterialApp(\r\n        home: Scaffold(\r\n          body: ParameterVisualizationWidget(\r\n            componentId: 'test-component',\r\n            parameterName: 'temperature',\r\n            dataPoints: [],\r\n            thresholds: testThresholds,\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n\r\n    expect(find.text('No data available'), findsOneWidget);\r\n  });\r\n\r\n  testWidgets('shows threshold indicators when provided', (WidgetTester tester) async {\r\n    await tester.pumpWidget(\r\n      MaterialApp(\r\n        home: Scaffold(\r\n          body: ParameterVisualizationWidget(\r\n            componentId: 'test-component',\r\n            parameterName: 'temperature',\r\n            dataPoints: testDataPoints,\r\n            thresholds: testThresholds,\r\n            showThresholds: true,\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n\r\n    expect(find.text('Max: 30.0'), findsOneWidget);\r\n    expect(find.text('Min: 20.0'), findsOneWidget);\r\n  });\r\n}"
        }
    ]
}